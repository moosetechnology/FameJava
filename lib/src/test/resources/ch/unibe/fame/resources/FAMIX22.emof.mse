((EMOF.Package (id: 1)
	(name DynaMoose)
	(ownedType
		(EMOF.Class (id: 2)
			(name AbstractEvent)
			(ownedAttribute
				(EMOF.Property (id: 3)
					(name parent)
					(class (idref: 2))
					(lower 0)
					(opposite (idref: 4))
					(type (idref: 2)))
				(EMOF.Property (id: 5)
					(name start)
					(class (idref: 2))
					(lower 0)
					(type (primitive: Number)))
				(EMOF.Property (id: 6)
					(name stop)
					(class (idref: 2))
					(lower 0)
					(type (primitive: Number)))
				(EMOF.Property (id: 4)
					(name child)
					(class (idref: 2))
					(isDerived true)
					(lower 0)
					(opposite (idref: 3))
					(type (idref: 2))
					(upper *)))
			(package (idref: 1))
			(superClass (idref: 7)))
		(EMOF.Class (id: 8)
			(name Trace)
			(ownedAttribute
				(EMOF.Property (id: 9)
					(name activation)
					(class (idref: 8))
					(isDerived true)
					(lower 0)
					(opposite (idref: 10))
					(type (idref: 11))
					(upper *))
				(EMOF.Property (id: 12)
					(name name)
					(class (idref: 8))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 13)
					(name start)
					(class (idref: 8))
					(lower 0)
					(type (primitive: Number)))
				(EMOF.Property (id: 14)
					(name stop)
					(class (idref: 8))
					(lower 0)
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 15)
					(name NOIf)
					(class (idref: 8))
					(description 'The number of Instances in a trace')
					(isReadOnly true)
					(longName 'Number of Instances')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 16)
					(name NOMLGf)
					(class (idref: 8))
					(description 'The number of low group feature methods in a trace')
					(isReadOnly true)
					(longName 'Number of low group feature methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 17)
					(name NOCHGf)
					(class (idref: 8))
					(description 'The number of High Group feature classes in a trace')
					(isReadOnly true)
					(longName 'Number of High Group feature classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 18)
					(name NOEvents)
					(class (idref: 8))
					(description 'The number of events in a trace')
					(isReadOnly true)
					(longName 'Number of events')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 19)
					(name 'NOMSf_p')
					(class (idref: 8))
					(description '% single feature methods in a trace')
					(isReadOnly true)
					(longName '% single feature methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 20)
					(name NOM)
					(class (idref: 8))
					(description 'The number of methods in a trace')
					(isReadOnly true)
					(longName 'Number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 21)
					(name NOCf)
					(class (idref: 8))
					(description 'The number of Classes in a trace')
					(isReadOnly true)
					(longName 'Number of Classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 22)
					(name NOMHGf)
					(class (idref: 8))
					(description 'The number of High Group feature methods in a trace')
					(isReadOnly true)
					(longName 'Number of High Group feature methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 23)
					(name 'NOCSf_p')
					(class (idref: 8))
					(description 'Percentage of single feature classes in a trace')
					(isReadOnly true)
					(longName 'Percentage single feature classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 24)
					(name NOCSf)
					(class (idref: 8))
					(description 'The number of single feature classes in a trace')
					(isReadOnly true)
					(longName 'Number of single feature classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 25)
					(name NOCLGf)
					(class (idref: 8))
					(description 'The number of low group feature classes in a trace')
					(isReadOnly true)
					(longName 'Number of low group feature classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 26)
					(name NOMSf)
					(class (idref: 8))
					(description 'The number of single feature methods in a trace')
					(isReadOnly true)
					(longName 'Number of single feature methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 27)
					(name NOMIf)
					(class (idref: 8))
					(description 'The number of Infrastructural feature methods in a trace')
					(isReadOnly true)
					(longName 'Number of Infrastructural feature methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 28)
					(name NOCIf)
					(class (idref: 8))
					(description 'The number of Infrastructural feature classes in a trace')
					(isReadOnly true)
					(longName 'Number of Infrastructural feature classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 29)
					(name 'NOCHGf_p')
					(class (idref: 8))
					(description 'Percentage of high group feature classes in a trace')
					(isReadOnly true)
					(longName 'Percentage high group feature classes')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 30)
					(name myUniqueInstancesGroup)
					(category 'Feature Instances')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 31)
					(name highGroupMethodCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 32)
					(name highGroupClassesCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 33)
					(name theFeaturesDependedOnTransitiveClosureGroup)
					(category 'Feature Relationships')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 34)
					(name instances)
					(category 'Feature Instances')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 35)
					(name openTimePlot)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 36)
					(name lowGroupMethodCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 37)
					(name infrastructuralClassesCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 38)
					(name openTimePlotHTMLWriterStream)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 39)
					(name openTimePlotAsk)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 40)
					(name openTimePlotLayerColorPlus)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 41)
					(name openColoredPlot)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 42)
					(name infrasturcturalFeatureMethodCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 43)
					(name singleClassesCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 44)
					(name openTimePlotLayerColor)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 45)
					(name openTimePlotSingleFeatureWriterStream)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 46)
					(name theFeaturesDependedOnGroup)
					(category 'Feature Relationships')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 47)
					(name openFCPlot)
					(category 'Time Signal')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 48)
					(name singleFeatureMethodCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 49)
					(name lowGroupClassesCharacterization)
					(category 'Feature Characterization')
					(class (idref: 8)))
				(EMOF.MetaAction (id: 50)
					(name theFeaturesSharedInstancesGroup)
					(category 'Feature Relationships')
					(class (idref: 8)))
				(EMOF.MetaNavigation (id: 51)
					(name infrastructuralFeatureClassesGroup)
					(class (idref: 8))
					(longName 'Infrastructural feature classes'))
				(EMOF.MetaNavigation (id: 52)
					(name highGroupFeatureClassesGroup)
					(class (idref: 8))
					(longName 'High group feature classes'))
				(EMOF.MetaNavigation (id: 53)
					(name singleFeatureClassesGroup)
					(class (idref: 8))
					(longName 'Single feature classes'))
				(EMOF.MetaNavigation (id: 54)
					(name lowGroupFeatureClassesGroup)
					(class (idref: 8))
					(longName 'Low group feature classes')))
			(package (idref: 1))
			(superClass (idref: 7)))
		(EMOF.Class (id: 11)
			(name Activation)
			(ownedAttribute
				(EMOF.Property (id: 55)
					(name method)
					(class (idref: 11))
					(lower 0)
					(type (idref: 56)))
				(EMOF.Property (id: 57)
					(name receiver)
					(class (idref: 11))
					(lower 0)
					(opposite (idref: 58))
					(type (idref: 59)))
				(EMOF.Property (id: 60)
					(name argument)
					(class (idref: 11))
					(isDerived true)
					(lower 0)
					(opposite (idref: 61))
					(type (idref: 62))
					(upper *))
				(EMOF.Property (id: 63)
					(name return)
					(class (idref: 11))
					(lower 0)
					(type (idref: 59)))
				(EMOF.Property (id: 10)
					(name trace)
					(class (idref: 11))
					(lower 0)
					(opposite (idref: 9))
					(type (idref: 8)))
				(EMOF.Property (id: 64)
					(name alias)
					(class (idref: 11))
					(isDerived true)
					(lower 0)
					(opposite (idref: 61))
					(type (idref: 65))
					(upper *)))
			(package (idref: 1))
			(superClass (idref: 2)))
		(EMOF.Class (id: 65)
			(name Alias)
			(ownedAttribute
				(EMOF.Property (id: 66)
					(name subject)
					(class (idref: 65))
					(lower 0)
					(opposite (idref: 67))
					(type (idref: 68)))
				(EMOF.Property (id: 69)
					(name variable)
					(class (idref: 65))
					(lower 0)
					(opposite (idref: 70))
					(type (idref: 71)))
				(EMOF.Property (id: 61)
					(name creator)
					(class (idref: 65))
					(lower 0)
					(opposite (idref: 64))
					(type (idref: 11)))
				(EMOF.Property (id: 72)
					(name ancestor)
					(class (idref: 65))
					(lower 0)
					(opposite (idref: 73))
					(type (idref: 65)))
				(EMOF.Property (id: 73)
					(name descendant)
					(class (idref: 65))
					(isDerived true)
					(lower 0)
					(opposite (idref: 72))
					(type (idref: 65))
					(upper *))
				(EMOF.Property (id: 74)
					(name timestamp)
					(class (idref: 65))
					(lower 0)
					(type (primitive: Number))))
			(package (idref: 1))
			(superClass (idref: 59)))
		(EMOF.Class (id: 59)
			(name Reference)
			(ownedAttribute
				(EMOF.Property (id: 58)
					(name activation)
					(class (idref: 59))
					(isDerived true)
					(lower 0)
					(opposite (idref: 57))
					(type (idref: 11))
					(upper *))
				(EMOF.MetaMeasurement (id: 75)
					(name NORM)
					(class (idref: 59))
					(description )
					(isReadOnly true)
					(longName 'Number of received messages')
					(type (primitive: Number))))
			(package (idref: 1))
			(superClass (idref: 7)))
		(EMOF.Class (id: 68)
			(name Instance)
			(ownedAttribute
				(EMOF.Property (id: 67)
					(name alias)
					(class (idref: 68))
					(isDerived true)
					(lower 0)
					(opposite (idref: 66))
					(type (idref: 65))
					(upper *))
				(EMOF.Property (id: 76)
					(name name)
					(class (idref: 68))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 77)
					(name instanceOf)
					(class (idref: 68))
					(lower 0)
					(opposite (idref: 78))
					(type (idref: 79)))
				(EMOF.MetaMeasurement (id: 80)
					(name NORF)
					(class (idref: 68))
					(description 'The number of features in which this instance is referenced')
					(isReadOnly true)
					(longName 'Number of referencing features')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 81)
					(name TO)
					(class (idref: 68))
					(description 'Trace in which the instance was created')
					(isReadOnly true)
					(longName 'Trace in which the instance was created')
					(type (primitive: Number))))
			(package (idref: 1))
			(superClass (idref: 59)))
		(EMOF.Class (id: 62)
			(name ArgumentAlias)
			(package (idref: 1))
			(superClass (idref: 65)))
		(EMOF.Class (id: 82)
			(name TraceEntityAssociation)
			(ownedAttribute
				(EMOF.Property (id: 83)
					(name trace)
					(class (idref: 82))
					(lower 0)
					(type (idref: 8)))
				(EMOF.MetaMeasurement (id: 84)
					(name wRel)
					(class (idref: 82))
					(description 'the relevence of an entity for a trace')
					(isReadOnly true)
					(longName 'relevence (Wilde)')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 85)
					(name FA)
					(class (idref: 82))
					(description 'relevance of a entity with respect to the traces in the model')
					(isReadOnly true)
					(longName 'Feature Affinity')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 86)
					(name aRel)
					(class (idref: 82))
					(description 'the relevence of a entity for a trace (normalized)')
					(isReadOnly true)
					(longName 'relevence (Antoniol)')
					(type (primitive: Number))))
			(package (idref: 1))
			(superClass (idref: 7)))
		(EMOF.Class (id: 87)
			(name AliasGroup)
			(package (idref: 1))
			(superClass (idref: 88)))
		(EMOF.Class (id: 89)
			(name ActivationGroup)
			(package (idref: 1))
			(superClass (idref: 88)))
		(EMOF.Class (id: 90)
			(name TraceGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 91)
					(name inspectFilterFCLevelAsk)
					(category 'Trace filtering')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 92)
					(name inspectFilterAwayEmptySelectors)
					(category 'Trace filtering')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 93)
					(name inspectFilterAwayHighGroupFC)
					(category 'Trace filtering')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 94)
					(name openTimePlot)
					(category 'Time Signal')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 95)
					(name openTimePlotHTMLWriterStream)
					(category 'Time Signal')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 96)
					(name openTimePlotAsk)
					(category 'Time Signal')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 97)
					(name inspectFilteredGroup)
					(category 'Trace filtering')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 98)
					(name openTimePlotLayerColorPlus)
					(category 'Time Signal')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 99)
					(name openColoredPlot)
					(category 'Time Signal')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 100)
					(name openTimePlotLayerColor)
					(category 'Time Signal')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 101)
					(name inspectFilterAwayHighGroupFCClasses)
					(category 'Trace filtering')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 102)
					(name openSingleFeaturePlot)
					(category 'Time Signal')
					(class (idref: 90)))
				(EMOF.MetaAction (id: 103)
					(name openFCPlot)
					(category 'Time Signal')
					(class (idref: 90))))
			(package (idref: 1))
			(superClass (idref: 88)))
		(EMOF.Class (id: 104)
			(name Return)
			(ownedAttribute
				(EMOF.Property (id: 105)
					(name instanceId)
					(class (idref: 104))
					(type (primitive: String))))
			(package (idref: 1))
			(superClass (idref: 2)))
		(EMOF.Class (id: 106)
			(name TempAlias)
			(package (idref: 1))
			(superClass (idref: 65)))
		(EMOF.Class (id: 107)
			(name FieldReadAlias)
			(package (idref: 1))
			(superClass (idref: 65)))
		(EMOF.Class (id: 108)
			(name GlobalReadAlias)
			(package (idref: 1))
			(superClass (idref: 65)))
		(EMOF.Class (id: 109)
			(name HistoricalAlias)
			(ownedAttribute
				(EMOF.Property (id: 110)
					(name predecessor)
					(class (idref: 109))
					(lower 0)
					(opposite (idref: 111))
					(type (idref: 109)))
				(EMOF.Property (id: 111)
					(name successor)
					(class (idref: 109))
					(isDerived true)
					(lower 0)
					(opposite (idref: 110))
					(type (idref: 109))))
			(package (idref: 1))
			(superClass (idref: 65)))
		(EMOF.Class (id: 112)
			(name ReturnAlias)
			(package (idref: 1))
			(superClass (idref: 65)))
		(EMOF.Class (id: 113)
			(name FieldAlias)
			(ownedOperation
				(EMOF.MetaNavigation (id: 114)
					(name targetAttribute)
					(class (idref: 113))
					(longName Attribute)))
			(package (idref: 1))
			(superClass (idref: 109)))
		(EMOF.Class (id: 115)
			(name GlobalAlias)
			(package (idref: 1))
			(superClass (idref: 109)))
		(EMOF.Class (id: 116)
			(name TracePackageAssociation)
			(ownedAttribute
				(EMOF.Property (id: 117)
					(name tracepackageassociation)
					(class (idref: 116))
					(isDerived true)
					(lower 0)
					(type (idref: 116))
					(upper *)))
			(package (idref: 1))
			(superClass (idref: 82)))
		(EMOF.Class (id: 118)
			(name TraceClassAssociation)
			(ownedAttribute
				(EMOF.Property (id: 119)
					(name trace)
					(class (idref: 118))
					(lower 0)
					(type (idref: 8)))
				(EMOF.Property (id: 120)
					(name entity)
					(class (idref: 118))
					(lower 0)
					(type (idref: 79)))
				(EMOF.MetaMeasurement (id: 121)
					(name Dedication)
					(class (idref: 118))
					(description 'percentage of class dedicated to a feature')
					(isReadOnly true)
					(longName 'percentage of class dedicated to a feature')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 122)
					(name NORCOther)
					(class (idref: 118))
					(description 'The number of references to Classes in other traces')
					(isReadOnly true)
					(longName 'Number of References to Classes in other traces')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 123)
					(name NORC)
					(class (idref: 118))
					(description 'The number of references to Classes in a trace')
					(isReadOnly true)
					(longName 'Number of References to Classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 124)
					(name Concentration)
					(class (idref: 118))
					(description 'percentage of feature in a class')
					(isReadOnly true)
					(longName 'percentage of feature in a class')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 125)
					(name touchedClass)
					(class (idref: 118))
					(longName 'Touched class'))
				(EMOF.MetaNavigation (id: 126)
					(name containingTrace)
					(class (idref: 118))
					(longName 'Containing trace')))
			(package (idref: 1))
			(superClass (idref: 82)))
		(EMOF.Class (id: 127)
			(name TraceMethodAssociation)
			(ownedAttribute
				(EMOF.Property (id: 128)
					(name tracemethodassociation)
					(class (idref: 127))
					(isDerived true)
					(lower 0)
					(type (idref: 127))
					(upper *))
				(EMOF.Property (id: 129)
					(name entity)
					(class (idref: 127))
					(lower 0)
					(type (idref: 56)))
				(EMOF.MetaMeasurement (id: 130)
					(name NORMOther)
					(class (idref: 127))
					(description 'The number of references to Methods in other traces')
					(isReadOnly true)
					(longName 'Number of References to Methods in other traces')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 131)
					(name NORM)
					(class (idref: 127))
					(description 'The number of references to Methods in a trace')
					(isReadOnly true)
					(longName 'Number of References to Methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 132)
					(name FM)
					(class (idref: 127))
					(description 'characterization of a method with respect to the traces in the model')
					(isReadOnly true)
					(longName 'feature characterization')
					(type (primitive: Number))))
			(package (idref: 1))
			(superClass (idref: 82)))))
(EMOF.Package (id: 133)
	(name FAMIX)
	(ownedType
		(EMOF.Class (id: 134)
			(name ModelRoot)
			(ownedAttribute
				(EMOF.Property (id: 135)
					(name stub)
					(class (idref: 134))
					(lower 0)
					(type (primitive: Boolean))))
			(package (idref: 133))
			(superClass (idref: 7)))
		(EMOF.Class (id: 56)
			(name Method)
			(ownedAttribute
				(EMOF.Property (id: 2000)
					(name returnType)
					(lower 0)
					(type (idref: 79)))
				(EMOF.Property (id: 2002)
					(name parameter)
					(lower 0)
					(upper *)
					(type (idref: 415)))	
				(EMOF.Property (id: 136)
					(name activation)
					(class (idref: 56))
					(lower 0)
					(opposite (idref: 55))
					(type (idref: 11))
					(upper *))
				(EMOF.Property (id: 137)
					(name hasClassScope)
					(class (idref: 56))
					(lower 0)
					(type (primitive: Boolean)))
				(EMOF.Property (id: 138)
					(name source)
					(class (idref: 56))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 139)
					(name belongsTo)
					(class (idref: 56))
					(isComposite true)
					(lower 0)
					(opposite (idref: 140))
					(type (idref: 79)))
				(EMOF.Property (id: 141)
					(name category)
					(class (idref: 56))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 142)
					(name isAbstract)
					(class (idref: 56))
					(isDerived true)
					(type (primitive: Boolean)))
				(EMOF.Property (id: 143)
					(name kind)
					(class (idref: 56))
					(type (primitive: String)))
				(EMOF.Property (id: 144)
					(name isConstructor)
					(class (idref: 56))
					(isDerived true)
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 145)
					(name isGetter)
					(class (idref: 56))
					(isReadOnly true)
					(longName isGetter)
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 146)
					(name isSetter)
					(class (idref: 56))
					(isReadOnly true)
					(longName isSetter)
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 147)
					(name isInternalImplementation)
					(class (idref: 56))
					(description 'Public Interface Layer Method')
					(isReadOnly true)
					(longName 'Public Interface Layer Method')
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 148)
					(name HDUPLINES)
					(class (idref: 56))
					(description 'The number of lines of code duplicated in hierarchy')
					(isReadOnly true)
					(longName 'Number of lines of code duplicated in hierarchy')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 149)
					(name NOActivations)
					(class (idref: 56))
					(description )
					(isReadOnly true)
					(longName 'Number of activations')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 150)
					(name overriden)
					(class (idref: 56))
					(description 'The method is overrinded in a sub class')
					(isReadOnly true)
					(longName 'Method overriden')
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 151)
					(name NIJSPI)
					(class (idref: 56))
					(description 'The number of invocations from JSP Pages')
					(isReadOnly true)
					(longName 'Number of invocations from JSP Pages')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 152)
					(name overriding)
					(class (idref: 56))
					(description 'The method is overrinding a method defined in a super class')
					(isReadOnly true)
					(longName 'Overriding method')
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 153)
					(name isInitializer)
					(class (idref: 56))
					(description 'Initialization Layer Method')
					(isReadOnly true)
					(longName 'Initialization Layer Method')
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 154)
					(name MHNL)
					(class (idref: 56))
					(description 'The nesting level in the hierarchy')
					(isReadOnly true)
					(longName 'Method hierarchy nesting level')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 155)
					(name FM)
					(class (idref: 56))
					(description 'characterization of a method with respect to the traces in the model')
					(isReadOnly true)
					(longName 'feature characterization')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 156)
					(name IDUPLINES)
					(class (idref: 56))
					(description 'The number of lines of code duplicated internally')
					(isReadOnly true)
					(longName 'Number of lines of code duplicated internally')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 157)
					(name isPublicInterface)
					(class (idref: 56))
					(description 'Public Interface Layer Method')
					(isReadOnly true)
					(longName 'Public Interface Layer Method')
					(type (primitive: Boolean)))
				(EMOF.MetaMeasurement (id: 158)
					(name EDUPLINES)
					(class (idref: 56))
					(description 'The number of lines of code duplicated externally')
					(isReadOnly true)
					(longName 'Number of lines of code duplicated externally')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 159)
					(name browseSource)
					(category main)
					(class (idref: 56)))
				(EMOF.MetaExpression (id: 160)
					(name intensiveCouplingExpressionForJava)
					(class (idref: 56)))
				(EMOF.MetaExpression (id: 161)
					(name featureEnvyExpressionForJava)
					(class (idref: 56)))
				(EMOF.MetaExpression (id: 162)
					(name dispersedCouplingExpressionForJava)
					(class (idref: 56)))
				(EMOF.MetaExpression (id: 163)
					(name shotgunSurgeryExpressionForJava)
					(class (idref: 56)))
				(EMOF.MetaExpression (id: 164)
					(name brainMethodExpressionForJava)
					(class (idref: 56)))
				(EMOF.MetaNavigation (id: 165)
					(name parentClassGroup)
					(class (idref: 56))
					(longName 'Parent class')))
			(package (idref: 133))
			(superClass (idref: 166)))
		(EMOF.Class (id: 166)
			(name AbstractBehaviouralEntity)
			(ownedAttribute
				(EMOF.Property (id: 167)
					(name access)
					(class (idref: 166))
					(isDerived true)
					(lower 0)
					(opposite (idref: 168))
					(type (idref: 169))
					(upper *))
				(EMOF.Property (id: 170)
					(name outgoingInvocation)
					(class (idref: 166))
					(isDerived true)
					(lower 0)
					(opposite (idref: 171))
					(type (idref: 172))
					(upper *))
				(EMOF.Property (id: 173)
					(name packagedIn)
					(class (idref: 166))
					(lower 0)
					(type (idref: 174)))
				(EMOF.Property (id: 175)
					(name accessControlQualifier)
					(class (idref: 166))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 176)
					(name incomingJspInvocation)
					(class (idref: 166))
					(isDerived true)
					(lower 0)
					(opposite (idref: 177))
					(type (idref: 178))
					(upper *))
				(EMOF.Property (id: 179)
					(name incomingInvocation)
					(class (idref: 166))
					(isDerived true)
					(lower 0)
					(opposite (idref: 180))
					(type (idref: 172))
					(upper *))
				(EMOF.Property (id: 181)
					(name signature)
					(class (idref: 166))
					(lower 0)
					(type (primitive: String)))
				(EMOF.MetaMeasurement (id: 182)
					(name LOC)
					(class (idref: 166))
					(description 'The number of lines of code in a method')
					(isReadOnly true)
					(longName 'Lines of code')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 183)
					(name CYCLO)
					(class (idref: 166))
					(description 'Actually this impl has an error, please use CYCLO2!!!')
					(isReadOnly true)
					(longName 'Cyclomatic complexity (has error!)')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 184)
					(name NOP)
					(class (idref: 166))
					(description 'The number of parameters in a method')
					(isReadOnly true)
					(longName 'Number of parameters')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 185)
					(name NOCmts)
					(class (idref: 166))
					(description 'The number of comments')
					(isReadOnly true)
					(longName 'Number of comments')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 186)
					(name NMAA)
					(class (idref: 166))
					(description 'The number of accesses from a method')
					(isReadOnly true)
					(longName 'Number of accesses')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 187)
					(name CC)
					(class (idref: 166))
					(description 'Number of distinct classes that contain methods that call the current method')
					(isReadOnly true)
					(longName 'Changing classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 188)
					(name NOCond)
					(class (idref: 166))
					(description 'The number of conditionals in a method')
					(isReadOnly true)
					(longName 'Number of conditionals')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 189)
					(name FANIN)
					(class (idref: 166))
					(description 'Number of calling classes')
					(isReadOnly true)
					(longName FANIN)
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 190)
					(name NOS)
					(class (idref: 166))
					(description 'The number of statements in a method')
					(isReadOnly true)
					(longName 'Number of statements')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 191)
					(name CM)
					(class (idref: 166))
					(description 'Number of distinct methods that call the current method')
					(isReadOnly true)
					(longName 'Changing methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 192)
					(name FANOUT)
					(class (idref: 166))
					(description 'Number of called classes')
					(isReadOnly true)
					(longName FANOUT)
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 193)
					(name 'CYCLO2')
					(class (idref: 166))
					(description 'The number of linear-independent paths through a method.')
					(isReadOnly true)
					(longName 'Cyclomatic complexity')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 194)
					(name NI)
					(class (idref: 166))
					(description 'The number of invocations in a method')
					(isReadOnly true)
					(longName 'Number of invocations')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 195)
					(name MSG)
					(class (idref: 166))
					(description 'The number of message from a method')
					(isReadOnly true)
					(longName 'Number of message sends')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 196)
					(name allAccesses)
					(class (idref: 166))
					(longName Accesses))
				(EMOF.MetaNavigation (id: 197)
					(name incomingInvocationsGroup)
					(class (idref: 166))
					(longName 'Incoming invocations'))
				(EMOF.MetaNavigation (id: 198)
					(name outgoingAccessesGroup)
					(class (idref: 166))
					(longName Accesses))
				(EMOF.MetaNavigation (id: 199)
					(name formalParametersGroup)
					(class (idref: 166))
					(longName 'Formal parameters'))
				(EMOF.MetaNavigation (id: 200)
					(name localVariablesGroup)
					(class (idref: 166))
					(longName 'Local variables'))
				(EMOF.MetaNavigation (id: 201)
					(name outgoingInvocationsGroup)
					(class (idref: 166))
					(longName 'All outgoing invocations')))
			(package (idref: 133))
			(superClass (idref: 202)))
		(EMOF.Class (id: 202)
			(name AbstractNamedEntity)
			(ownedAttribute
				(EMOF.Property (id: 342)
					(name accessedByList)
					(class (idref: 202))
					(isDerived true)
					(lower 0)
					(opposite (idref: 207))
					(type (idref: 169))
					(upper *))			
				(EMOF.Property (id: 203)
					(name name)
					(class (idref: 202))
					(lower 0)
					(type (primitive: String)))
				(EMOF.MetaMeasurement (id: 204)
					(name NL)
					(class (idref: 202))
					(description 'The number of characters in the name')
					(isReadOnly true)
					(longName 'Name length')
					(type (primitive: Number))))
			(package (idref: 133))
			(superClass (idref: 205)))
		(EMOF.Class (id: 205)
			(name AbstractObject)
			(ownedAttribute
				(EMOF.Property (id: 206)
					(name sourceAnchor)
					(class (idref: 205))
					(lower 0)
					(type (primitive: String))))
			(package (idref: 133))
			(superClass (idref: 134)))
		(EMOF.Class (id: 169)
			(name Access)
			(ownedAttribute
				(EMOF.Property (id: 207)
					(name accesses)
					(class (idref: 169))
					(lower 0)
					(opposite (idref: 342))
					(type (idref: 202)))
				(EMOF.Property (id: 208)
					(name readWriteAccess)
					(class (idref: 169))
					(lower 0)
					(type (primitive: Boolean)))
				(EMOF.Property (id: 168)
					(name accessedIn)
					(class (idref: 169))
					(lower 0)
					(opposite (idref: 167))
					(type (idref: 166))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 209)
					(name accessedVariable)
					(class (idref: 169))
					(longName 'Accessed variable'))
				(EMOF.MetaNavigation (id: 210)
					(name accessingBehaviour)
					(class (idref: 169))
					(longName 'Accessing behaviour entity')))
			(package (idref: 133))
			(superClass (idref: 211)))
		(EMOF.Class (id: 1000)
			(name JSPAccess)
			(ownedAttribute
				(EMOF.Property (id: 1001)
					(name accesses)
					(class (idref: 1000))
					(type (idref: 202)))
				(EMOF.Property (id: 1004)
					(name accessedIn)
					(class (idref: 1000))
					(type (idref: 353))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 1002)
					(name accessedVariable)
					(class (idref: 1000))
					(longName 'Accessed variable'))
				(EMOF.MetaNavigation (id: 1003)
					(name accessingBehaviour)
					(class (idref: 1000))
					(longName 'Accessing behaviour entity')))
			(package (idref: 133))
			(superClass (idref: 211))
		)
		(EMOF.Class (id: 211)
			(name AbstractAssociation)
			(package (idref: 133))
			(superClass (idref: 205)))
		(EMOF.Class (id: 172)
			(name Invocation)
			(ownedAttribute
				(EMOF.Property (id: 2001)
					(name receivingType)
					(lower 0)
					(type (idref: 79)))	
				(EMOF.Property (id: 171)
					(name invokedBy)
					(class (idref: 172))
					(lower 0)
					(opposite (idref: 170))
					(type (idref: 166)))
				(EMOF.Property (id: 180)
					(name candidate)
					(class (idref: 172))
					(lower 0)
					(opposite (idref: 179))
					(type (idref: 166))
					(upper *))
				(EMOF.Property (id: 212)
					(name receivingVariable)
					(class (idref: 172))
					(lower 0)
					(type (idref: 205)))
				(EMOF.Property (id: 213)
					(name invokes)
					(class (idref: 172))
					(lower 0)
					(type (primitive: String))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 214)
					(name invokedCandidates)
					(class (idref: 172))
					(longName 'Invoked behaviour'))
				(EMOF.MetaNavigation (id: 215)
					(name invokingBehaviour)
					(class (idref: 172))
					(longName 'Invoking Behaviour')))
			(package (idref: 133))
			(superClass (idref: 211)))
		(EMOF.Class (id: 174)
			(name Package)
			(ownedAttribute
				(EMOF.Property (id: 216)
					(name extendedClass)
					(class (idref: 174))
					(lower 0)
					(type (idref: 79))
					(upper *))
				(EMOF.Property (id: 217)
					(name definedClass)
					(class (idref: 174))
					(isDerived true)
					(lower 0)
					(opposite (idref: 218))
					(type (idref: 79))
					(upper *))
				(EMOF.Property (id: 219)
					(name packagedIn)
					(class (idref: 174))
					(isComposite true)
					(lower 0)
					(type (idref: 174)))
				(EMOF.MetaMeasurement (id: 220)
					(name LOC)
					(class (idref: 174))
					(isReadOnly true)
					(longName LOC)
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 221)
					(name TLOC)
					(class (idref: 174))
					(isReadOnly true)
					(longName TLOC)
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 222)
					(name viewPackageBrowser)
					(category Mondrian)
					(class (idref: 174)))
				(EMOF.MetaNavigation (id: 223)
					(name parentPackage)
					(class (idref: 174))
					(longName 'Containing package'))
				(EMOF.MetaNavigation (id: 224)
					(name definedClassesGroup)
					(class (idref: 174))
					(longName 'Defined classes'))
				(EMOF.MetaNavigation (id: 225)
					(name extendedClassesGroup)
					(class (idref: 174))
					(longName 'Extended classes'))
				(EMOF.MetaNavigation (id: 226)
					(name childPackages)
					(class (idref: 174))
					(longName 'Child packages')))
			(package (idref: 133))
			(superClass (idref: 202)))
		(EMOF.Class (id: 79)
			(name Class)
			(ownedAttribute
				"//NOTE move accessedByList up to AbstractNamedEntity"
				(EMOF.Property (id: 140)
					(name method)
					(class (idref: 79))
					(isDerived true)
					(lower 0)
					(opposite (idref: 139))
					(type (idref: 56))
					(upper *))
				(EMOF.Property (id: 218)
					(name packagedIn)
					(class (idref: 79))
					(isComposite true)
					(lower 0)
					(opposite (idref: 217))
					(type (idref: 174)))
				(EMOF.Property (id: 228)
					(name interfaceSignature)
					(class (idref: 79))
					(lower 0)
					(type (primitive: String))
					(upper *))
				(EMOF.Property (id: 229)
					(name isInterface)
					(class (idref: 79))
					(type (primitive: Boolean)))
				(EMOF.Property (id: 230)
					(name attribute)
					(class (idref: 79))
					(isDerived true)
					(lower 0)
					(opposite (idref: 231))
					(type (idref: 232))
					(upper *))
				(EMOF.Property (id: 233)
					(name belongsTo)
					(class (idref: 79))
					(isComposite true)
					(lower 0)
					(opposite (idref: 234))
					(type (idref: 235)))
				(EMOF.Property (id: 78)
					(name instance)
					(class (idref: 79))
					(isDerived true)
					(lower 0)
					(opposite (idref: 77))
					(type (idref: 68))
					(upper *))
				(EMOF.Property (id: 236)
					(name isAbstract)
					(class (idref: 79))
					(type (primitive: Boolean)))
				(EMOF.Property (id: 237)
					(name outgoingInheritance)
					(class (idref: 79))
					(isDerived true)
					(lower 0)
					(opposite (idref: 241)) "//NOTE bug fixed, was refering to super instead of subclass"
					(type (idref: 239))
					(upper *))
				(EMOF.Property (id: 240)
					(name incomingInheritance)
					(class (idref: 79))
					(isDerived true)
					(lower 0)
					(opposite (idref: 238)) "//NOTE bug fixed, was refering to sub instead of superclass"
					(type (idref: 239))
					(upper *))
				(EMOF.MetaMeasurement (id: 242)
					(name IDUPLINES)
					(class (idref: 79))
					(description 'The number of duplicated lines of code internally')
					(isReadOnly true)
					(longName 'Number of duplicated lines of code internally')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 243)
					(name WLOC)
					(class (idref: 79))
					(description 'The number of lines of code in a class')
					(isReadOnly true)
					(longName 'Number of lines of code')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 244)
					(name NOInstances)
					(class (idref: 79))
					(description 'number of instances in the model')
					(isReadOnly true)
					(longName 'Number of instances')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 245)
					(name NOAM)
					(class (idref: 79))
					(description 'The number of accessor methods in a class')
					(isReadOnly true)
					(longName 'Number of accesor methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 246)
					(name WNOCmts)
					(class (idref: 79))
					(description 'The number of comments in a class')
					(isReadOnly true)
					(longName 'Number of comments')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 247)
					(name NMI)
					(class (idref: 79))
					(description 'The number of methods in a class inherited from super classes')
					(isReadOnly true)
					(longName 'Number of methods inherited')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 248)
					(name NME)
					(class (idref: 79))
					(description 'The number of method extensions in a class')
					(isReadOnly true)
					(longName 'Number of method extensions')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 249)
					(name NOPAplusNOAM)
					(class (idref: 79))
					(description 'The number of public attributes plus the number of accessor methods')
					(isReadOnly true)
					(longName 'Number of revealed attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 250)
					(name FANIN)
					(class (idref: 79))
					(description 'Number of calling classes')
					(isReadOnly true)
					(longName FANIN)
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 251)
					(name NOM)
					(class (idref: 79))
					(description 'The number of methods in a class')
					(isReadOnly true)
					(longName 'Number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 252)
					(name NAI)
					(class (idref: 79))
					(description 'The number of attributes in a class inherited from super classes')
					(isReadOnly true)
					(longName 'Number of attributes inherited')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 253)
					(name WNOS)
					(class (idref: 79))
					(description 'The number of statements in a class')
					(isReadOnly true)
					(longName 'Number of statements')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 254)
					(name WOC)
					(class (idref: 79))
					(description 'Weight of a class')
					(isReadOnly true)
					(longName 'Weight of a class')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 255)
					(name WIM)
					(class (idref: 79))
					(description 'The number of methods of a class included the inherited ones')
					(isReadOnly true)
					(longName 'Weighted Number of Methods (recursively)')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 256)
					(name PriA)
					(class (idref: 79))
					(description 'The number of private attributes in a class')
					(isReadOnly true)
					(longName 'Number of private attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 257)
					(name WMC)
					(class (idref: 79))
					(description 'The sum of the complexity  in a class')
					(isReadOnly true)
					(longName 'Weighted method count')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 258)
					(name PriM)
					(class (idref: 79))
					(description 'The number of private methods in a class')
					(isReadOnly true)
					(longName 'Number of private methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 259)
					(name ATFD)
					(class (idref: 79))
					(description 'Number of accesses to foreign data')
					(isReadOnly true)
					(longName 'Number of accesses to foreign data')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 260)
					(name NMO)
					(class (idref: 79))
					(description 'The number of methods in a class overriden with respect to super classes')
					(isReadOnly true)
					(longName 'Number of methods overriden')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 261)
					(name NOMP)
					(class (idref: 79))
					(description 'The number of method protocols in a class')
					(isReadOnly true)
					(longName 'Number of method protocols')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 262)
					(name ProA)
					(class (idref: 79))
					(description 'The number of protected attributes in a class')
					(isReadOnly true)
					(longName 'Number of protected attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 263)
					(name FANOUT)
					(class (idref: 79))
					(description 'Number of called classes')
					(isReadOnly true)
					(longName FANOUT)
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 264)
					(name PubM)
					(class (idref: 79))
					(description 'The number of public methods in a class')
					(isReadOnly true)
					(longName 'Number of public methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 265)
					(name HNL)
					(class (idref: 79))
					(description 'The nesting of a class inside the hierarchy')
					(isReadOnly true)
					(longName 'Hierarchy nesting level')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 266)
					(name FA)
					(class (idref: 79))
					(description 'relevance of a class with respect to the traces in the model')
					(isReadOnly true)
					(longName 'Feature Affinity')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 267)
					(name NMA)
					(class (idref: 79))
					(description 'The number of methods in a class added with respect to super classes')
					(isReadOnly true)
					(longName 'Number of methods added')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 268)
					(name ProM)
					(class (idref: 79))
					(description 'The number of protected methods in a class')
					(isReadOnly true)
					(longName 'Number of protected methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 269)
					(name NOA)
					(class (idref: 79))
					(description 'The number of attributes in the class')
					(isReadOnly true)
					(longName 'Number of Attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 270)
					(name WNOC)
					(class (idref: 79))
					(description 'The total number of subclasses of a class')
					(isReadOnly true)
					(longName 'Total number of children (recursively)')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 271)
					(name NOC)
					(class (idref: 79))
					(description 'The number of subclasses of a class')
					(isReadOnly true)
					(longName 'Number of children')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 272)
					(name WMSG)
					(class (idref: 79))
					(description 'The number of message sends from a class')
					(isReadOnly true)
					(longName 'Number of message sends')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 273)
					(name NOPA)
					(class (idref: 79))
					(description 'The number of public attributes in a class')
					(isReadOnly true)
					(longName 'Number of public attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 274)
					(name NC)
					(class (idref: 79))
					(description 'The number of constructor methods in a class')
					(isReadOnly true)
					(longName 'Number of constructor methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 275)
					(name AbsM)
					(class (idref: 79))
					(description 'The number of abstract methods in the class')
					(isReadOnly true)
					(longName 'Number of  abstract methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 276)
					(name TCC)
					(class (idref: 79))
					(description 'Tight class cohesion of a class')
					(isReadOnly true)
					(longName 'Tight class cohesion')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 277)
					(name NOPa)
					(class (idref: 79))
					(description 'The number of superclasses')
					(isReadOnly true)
					(longName 'Number of parents')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 278)
					(name browseSource)
					(category main)
					(class (idref: 79)))
				(EMOF.MetaAction (id: 279)
					(name viewBlueprint)
					(category Mondrian)
					(class (idref: 79)))
				(EMOF.MetaAction (id: 280)
					(name viewCollaboration)
					(category Mondrian)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 281)
					(name godClassExpressionForJava)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 282)
					(name dataClassExpressionForJava)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 283)
					(name godClassExpressionForSmalltalk)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 284)
					(name brainClassExpressionForJava)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 285)
					(name innerClassExpression)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 286)
					(name interfaceExpression)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 287)
					(name abstractExpression)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 288)
					(name hierarchyRootExpression)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 289)
					(name modelClassExpression)
					(class (idref: 79)))
				(EMOF.MetaExpression (id: 290)
					(name instanceClassExpression)
					(class (idref: 79)))
				(EMOF.MetaNavigation (id: 291)
					(name methodsGroup)
					(class (idref: 79))
					(longName Methods))
				(EMOF.MetaNavigation (id: 292)
					(name subclassHierarchyGroup)
					(class (idref: 79))
					(longName Subclasses))
				(EMOF.MetaNavigation (id: 293)
					(name incomingInvocationsGroup)
					(class (idref: 79))
					(longName 'Incoming invocations'))
				(EMOF.MetaNavigation (id: 294)
					(name containingPackage)
					(class (idref: 79))
					(longName 'Containing package'))
				(EMOF.MetaNavigation (id: 295)
					(name invokedClassesGroup)
					(class (idref: 79))
					(longName 'Invoked classes'))
				(EMOF.MetaNavigation (id: 296)
					(name attributesGroup)
					(class (idref: 79))
					(longName Attributes))
				(EMOF.MetaNavigation (id: 297)
					(name incomingAccessesGroup)
					(class (idref: 79))
					(longName 'Incoming accesses'))
				(EMOF.MetaNavigation (id: 298)
					(name withSubclassHierarchyGroup)
					(class (idref: 79))
					(longName 'All subclasses'))
				(EMOF.MetaNavigation (id: 299)
					(name withSuperclassHierarchyGroup)
					(class (idref: 79))
					(longName 'With superclasses'))
				(EMOF.MetaNavigation (id: 300)
					(name outgoingAccessesGroup)
					(class (idref: 79))
					(longName 'Outgoing accesses'))
				(EMOF.MetaNavigation (id: 301)
					(name superclassHierarchyGroup)
					(class (idref: 79))
					(longName Superclasses))
				(EMOF.MetaNavigation (id: 302)
					(name outgoingInvocationsGroup)
					(class (idref: 79))
					(longName 'Outgoing invocations')))
			(package (idref: 133))
			(superClass (idref: 303)))
		(EMOF.Class (id: 303)
			(name AbstractScopable)
			(ownedAttribute
				(EMOF.Property (id: 304)
					(name belongsTo)
					(class (idref: 303))
					(isComposite true)
					(lower 0)
					(type (idref: 235))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 305)
					(name container)
					(class (idref: 303))
					(longName 'Containing namespace')))
			(package (idref: 133))
			(superClass (idref: 202)))
		(EMOF.Class (id: 235)
			(name Namespace)
			(ownedAttribute
				(EMOF.Property (id: 306)
					(name namespace)
					(class (idref: 235))
					(isDerived true)
					(lower 0)
					(opposite (idref: 307))
					(type (idref: 235))
					(upper *))
				(EMOF.Property (id: 307)
					(name belongsTo)
					(class (idref: 235))
					(isComposite true)
					(lower 0)
					(opposite (idref: 306))
					(type (idref: 235)))
				(EMOF.Property (id: 308)
					(name function)
					(class (idref: 235))
					(isDerived true)
					(lower 0)
					(opposite (idref: 309))
					(type (idref: 310))
					(upper *))
				(EMOF.Property (id: 234)
					(name class)
					(class (idref: 235))
					(isDerived true)
					(lower 0)
					(opposite (idref: 233))
					(type (idref: 79))
					(upper *))
				(EMOF.Property (id: 311)
					(name packagedIn)
					(class (idref: 235))
					(isComposite true)
					(lower 0)
					(type (idref: 174)))
				(EMOF.MetaMeasurement (id: 312)
					(name LOC)
					(class (idref: 235))
					(description 'The number of lines of code in a namespace')
					(isReadOnly true)
					(longName 'Number of lines of code')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 313)
					(name NOICls)
					(class (idref: 235))
					(description 'The number of non interfaces classes in a namespace')
					(isReadOnly true)
					(longName 'Number of non interfaces classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 314)
					(name RNOM)
					(class (idref: 235))
					(description 'The recursive number of methods in a namespace')
					(isReadOnly true)
					(longName 'Recursive number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 315)
					(name RLOC)
					(class (idref: 235))
					(description 'The number of recursive number of lines of code in a namespace')
					(isReadOnly true)
					(longName 'Number of recursive lines of code')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 316)
					(name NOM)
					(class (idref: 235))
					(description 'The number of methods in a namespace')
					(isReadOnly true)
					(longName 'Number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 317)
					(name NOCls)
					(class (idref: 235))
					(description 'The number of classes in a namespace')
					(isReadOnly true)
					(longName 'Number of classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 318)
					(name RNOCls)
					(class (idref: 235))
					(description 'The recursive number of classes in a namespace')
					(isReadOnly true)
					(longName 'Recursive number of classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 319)
					(name NOA)
					(class (idref: 235))
					(description 'The number of attributes in a namespace')
					(isReadOnly true)
					(longName 'Number of attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 320)
					(name NOMIJSP)
					(class (idref: 235))
					(description 'The number of methods in a namespace')
					(isReadOnly true)
					(longName 'Number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 321)
					(name NORICls)
					(class (idref: 235))
					(description 'The number of recursive non interfaces classes in a namespace')
					(isReadOnly true)
					(longName 'Number of recursive non interfaces classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 322)
					(name RNOA)
					(class (idref: 235))
					(description 'The recursive number of attributes in a namespace')
					(isReadOnly true)
					(longName 'Recursive number of attributes')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 323)
					(name viewClassSystemComplexity)
					(category Mondrian)
					(class (idref: 235)))
				(EMOF.MetaAction (id: 324)
					(name viewUmlWithMethodsAndAttributes)
					(category Mondrian)
					(class (idref: 235)))
				(EMOF.MetaAction (id: 325)
					(name viewAllClassSystemComplexity)
					(category Mondrian)
					(class (idref: 235)))
				(EMOF.MetaExpression (id: 326)
					(name recursivelyContainsStubClassesExpression)
					(class (idref: 235)))
				(EMOF.MetaExpression (id: 327)
					(name containsStubClassesExpression)
					(class (idref: 235)))
				(EMOF.MetaNavigation (id: 328)
					(name classGroup)
					(class (idref: 235))
					(longName 'All classes'))
				(EMOF.MetaNavigation (id: 329)
					(name functionGroup)
					(class (idref: 235))
					(longName 'All functions'))
				(EMOF.MetaNavigation (id: 330)
					(name allFunctions)
					(class (idref: 235))
					(longName 'All functions'))
				(EMOF.MetaNavigation (id: 331)
					(name recursiveClassesGroup)
					(class (idref: 235))
					(longName 'All recursive classes'))
				(EMOF.MetaNavigation (id: 332)
					(name recursiveFunctionsGroup)
					(class (idref: 235))
					(longName 'All recursive functions')))
			(package (idref: 133))
			(superClass (idref: 303)))
		(EMOF.Class (id: 310)
			(name Function)
			(ownedAttribute
				(EMOF.Property (id: 309)
					(name belongsTo)
					(class (idref: 310))
					(lower 0)
					(opposite (idref: 308))
					(type (idref: 235))))
			(package (idref: 133))
			(superClass (idref: 166)))
		(EMOF.Class (id: 232)
			(name Attribute)
			(ownedAttribute
				(EMOF.Property (id: 231)
					(name belongsTo)
					(class (idref: 232))
					(isComposite true)
					(lower 0)
					(opposite (idref: 230))
					(type (idref: 79)))
				(EMOF.Property (id: 333)
					(name hasClassScope)
					(class (idref: 232))
					(lower 0)
					(type (primitive: Boolean)))
				(EMOF.Property (id: 334)
					(name accessControlQualifier)
					(class (idref: 232))
					(lower 0)
					(type (primitive: String)))
				(EMOF.MetaMeasurement (id: 335)
					(name NGA)
					(class (idref: 232))
					(description 'The number of accesses to an attribute from outside the class defining the attribute.')
					(isReadOnly true)
					(longName 'Number of global accesses')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 336)
					(name NAA)
					(class (idref: 232))
					(description 'The number of accesses of an attribute.')
					(isReadOnly true)
					(longName 'Number of accesses')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 337)
					(name NCM)
					(class (idref: 232))
					(description 'The number of classes from which at least one method accesses an attribute.')
					(isReadOnly true)
					(longName 'Number of accessing classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 338)
					(name NLA)
					(class (idref: 232))
					(description 'The number of accesses to an attribute from inside the class defining the attribute.')
					(isReadOnly true)
					(longName 'Number of local accesses')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 339)
					(name AHNL)
					(class (idref: 232))
					(description 'The hierarchy nesting level of an attribute.')
					(isReadOnly true)
					(longName 'Attribute hierarchy nesting level')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 340)
					(name NM)
					(class (idref: 232))
					(description 'The number of methods accessing an attribute.')
					(isReadOnly true)
					(longName 'Number of accessing methods')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 341)
					(name parentClassGroup)
					(class (idref: 232))
					(longName 'Parent class')))
			(package (idref: 133))
			(superClass (idref: 71)))
		(EMOF.Class (id: 71)
			(name AbstractStructuralEntity)
			(ownedAttribute
				"//NOTE pushed accessedByList up to AbstractNamedEntity"
				(EMOF.Property (id: 343)
					(name declaredType)
					(class (idref: 71))
					(type (idref: 79)))
				(EMOF.Property (id: 344)
					(name declaredClass)
					(class (idref: 71))
					(type (idref: 79)))
				(EMOF.Property (id: 70)
					(name hostedAlias)
					(class (idref: 71))
					(isDerived true)
					(lower 0)
					(type (idref: 65))
					(upper *))
				(EMOF.MetaMeasurement (id: 345)
					(name NOAcc)
					(class (idref: 71))
					(description 'Total number of accesses')
					(isReadOnly true)
					(longName 'Number of accesses')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 346)
					(name allAccessedByList)
					(class (idref: 71))
					(longName 'Accessed in')))
			(package (idref: 133))
			(superClass (idref: 202)))
		(EMOF.Class (id: 239)
			(name InheritanceDefinition)
			(ownedAttribute
				(EMOF.Property (id: 238)
					(name superclass)
					(class (idref: 239))
					(lower 0)
					(opposite (idref: 240))
					(type (idref: 79)))
				(EMOF.Property (id: 347)
					(name index)
					(class (idref: 239))
					(type (primitive: Number)))
				(EMOF.Property (id: 241)
					(name subclass)
					(class (idref: 239))
					(lower 0)
					(opposite (idref: 237))
					(type (idref: 79)))
				(EMOF.Property (id: 348)
					(name accessControlQualifier)
					(class (idref: 239))
					(type (primitive: String))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 349)
					(name subClass)
					(class (idref: 239))
					(longName Subclass))
				(EMOF.MetaNavigation (id: 350)
					(name superClass)
					(class (idref: 239))
					(longName Superclass)))
			(package (idref: 133))
			(superClass (idref: 211)))
		(EMOF.Class (id: 178)
			(name JSPInvocation)
			(ownedAttribute
				(EMOF.Property (id: 351)
					(name invokedBy)
					(class (idref: 178))
					(lower 0)
					(opposite (idref: 352))
					(type (idref: 353)))
				(EMOF.Property (id: 177)
					(name candidate)
					(class (idref: 178))
					(lower 0)
					(opposite (idref: 176))
					(type (idref: 166))
					(upper *))
				(EMOF.Property (id: 354)
					(name invokes)
					(class (idref: 178))
					(lower 0)
					(type (primitive: String))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 1100)
					(name invokedCandidates)
					(class (idref: 178))
					(longName 'Invoked behaviour'))
				(EMOF.MetaNavigation (id: 1101)
					(name invokingBehaviour)
					(class (idref: 178))
					(longName 'Invoking Behaviour')))
			(package (idref: 133))
			(superClass (idref: 211)))
		(EMOF.Class (id: 353)
			(name JSPPage)
			(ownedAttribute
				(EMOF.Property (id: 355)
					(name filedIn)
					(class (idref: 353))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 352)
					(name outgoingJspInvocation)
					(class (idref: 353))
					(isDerived true)
					(lower 0)
					(opposite (idref: 351))
					(type (idref: 178))
					(upper *))
				(EMOF.MetaMeasurement (id: 356)
					(name NOJSPI)
					(class (idref: 353))
					(description 'The number of invocations to methods from this JSP Page')
					(isReadOnly true)
					(longName 'Number of invocations to methods')
					(type (primitive: Number))))
			(package (idref: 133))
			(superClass (idref: 202)))
		(EMOF.Class (id: 357)
			(name AbstractArgument)
			(ownedAttribute
				(EMOF.Property (id: 358)
					(name isReceiver)
					(class (idref: 357))
					(lower 0)
					(type (primitive: Boolean)))
				(EMOF.Property (id: 359)
					(name position)
					(class (idref: 357))
					(lower 0)
					(type (primitive: Number))))
			(package (idref: 133))
			(superClass (idref: 205)))
		(EMOF.Class (id: 360)
			(name Literal)
			(ownedAttribute
				(EMOF.Property (id: 361)
					(name content)
					(class (idref: 360))
					(type (primitive: String)))
				(EMOF.Property (id: 362)
					(name occurrence)
					(class (idref: 360))
					(lower 0)
					(type (idref: 202))
					(upper *))
				(EMOF.MetaMeasurement (id: 363)
					(name Len)
					(class (idref: 360))
					(description 'Length of content string.')
					(isReadOnly true)
					(longName 'Length of content string.')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 364)
					(name NOO)
					(class (idref: 360))
					(isReadOnly true)
					(longName 'Number of occurrences.')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 365)
					(name occurrencesGroup)
					(class (idref: 360))
					(longName Occurrences))
				(EMOF.MetaNavigation (id: 366)
					(name modelOccurrencesGroup)
					(class (idref: 360))
					(longName 'Occurrences in model')))
			(package (idref: 133))
			(superClass (idref: 205)))
		(EMOF.Class (id: 367)
			(name Comment)
			(ownedAttribute
				(EMOF.Property (id: 368)
					(name belongsTo)
					(class (idref: 367))
					(lower 0)
					(type (idref: 134)))
				(EMOF.Property (id: 369)
					(name content)
					(class (idref: 367))
					(lower 0)
					(type (primitive: String))))
			(package (idref: 133))
			(superClass (idref: 205)))
		(EMOF.Class (id: 370)
			(name Include)
			(ownedAttribute
				(EMOF.Property (id: 371)
					(name includedFile)
					(class (idref: 370))
					(type (idref: 372)))
				(EMOF.Property (id: 373)
					(name includingFile)
					(class (idref: 370))
					(type (idref: 372))))
			(package (idref: 133))
			(superClass (idref: 211)))
		(EMOF.Class (id: 372)
			(name File)
			(ownedAttribute
				(EMOF.Property (id: 374)
					(name belongsTo)
					(class (idref: 372))
					(lower 0)
					(opposite (idref: 375))
					(type (idref: 376)))
				(EMOF.MetaMeasurement (id: 377)
					(name NoIC)
					(class (idref: 372))
					(description 'The number of cloned fragments within the file')
					(isReadOnly true)
					(longName 'Number of Internal Clones')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 378)
					(name ELOT)
					(class (idref: 372))
					(description 'Number of empty lines of text')
					(isReadOnly true)
					(longName 'Empty lines of text')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 379)
					(name NoIM)
					(class (idref: 372))
					(description 'The number of original fragments duplicated internally')
					(isReadOnly true)
					(longName 'Number of Internal Multiplications')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 380)
					(name NOCh)
					(class (idref: 372))
					(description 'Number of characters in a file.')
					(isReadOnly true)
					(longName 'Number of characters')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 381)
					(name ACh)
					(class (idref: 372))
					(description 'Average number of characters per lline of text in a file.')
					(isReadOnly true)
					(longName 'Average number of characters')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 382)
					(name NoDF)
					(class (idref: 372))
					(description 'The number of distinct files that contain fragments duplicated in this file')
					(isReadOnly true)
					(longName 'Number of Files with Fragments Duplicated Here')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 383)
					(name LOT)
					(class (idref: 372))
					(description 'Number of lines of text which are not empty in a file ')
					(isReadOnly true)
					(longName 'Not empty lines of text')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 384)
					(name KBYT)
					(class (idref: 372))
					(description 'Number of kilo bytes in a file.')
					(isReadOnly true)
					(longName 'Number of kilo bytes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 385)
					(name NoID)
					(class (idref: 372))
					(description 'The number of pairs of duplicate fragments within the file')
					(isReadOnly true)
					(longName 'Number of Internal Duplications')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 386)
					(name BYT)
					(class (idref: 372))
					(description 'Number of bytes in a file.')
					(isReadOnly true)
					(longName 'Number of bytes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 387)
					(name NoED)
					(class (idref: 372))
					(description 'The number of pairs of duplicate fragments between this file and other files')
					(isReadOnly true)
					(longName 'Number of External Duplications')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 388)
					(name NoEC)
					(class (idref: 372))
					(description 'The number of fragments in this file cloned in other files')
					(isReadOnly true)
					(longName 'Number of External Clones')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 389)
					(name TLOT)
					(class (idref: 372))
					(description 'Number of lines of text')
					(isReadOnly true)
					(longName 'Total lines of text')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 390)
					(name browseSource)
					(category main)
					(class (idref: 372)))
				(EMOF.MetaAction (id: 391)
					(name browseDupSource)
					(category main)
					(class (idref: 372)))
				(EMOF.MetaNavigation (id: 392)
					(name allInternalDuplications)
					(class (idref: 372))
					(longName 'All internal duplications'))
				(EMOF.MetaNavigation (id: 393)
					(name allExternalDuplications)
					(class (idref: 372))
					(longName 'All external duplications'))
				(EMOF.MetaNavigation (id: 394)
					(name allInternalMultiplications)
					(class (idref: 372))
					(longName 'All internal multiplications'))
				(EMOF.MetaNavigation (id: 395)
					(name allExternalFiles)
					(class (idref: 372))
					(longName 'All files with fragments duplicated here')))
			(package (idref: 133))
			(superClass (idref: 396)))
		(EMOF.Class (id: 396)
			(name AbstractFile)
			(package (idref: 133))
			(superClass (idref: 202)))
		(EMOF.Class (id: 376)
			(name Folder)
			(ownedAttribute
				(EMOF.Property (id: 397)
					(name belongsTo)
					(class (idref: 376))
					(lower 0)
					(opposite (idref: 398))
					(type (idref: 376)))
				(EMOF.Property (id: 398)
					(name folder)
					(class (idref: 376))
					(isDerived true)
					(lower 0)
					(opposite (idref: 397))
					(type (idref: 376))
					(upper *))
				(EMOF.Property (id: 375)
					(name file)
					(class (idref: 376))
					(isDerived true)
					(lower 0)
					(opposite (idref: 374))
					(type (idref: 372))
					(upper *))
				(EMOF.MetaMeasurement (id: 399)
					(name LOT)
					(class (idref: 376))
					(description 'Number of lines of text which are not empty in a file ')
					(isReadOnly true)
					(longName 'Not empty lines of text')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 400)
					(name foldersGroup)
					(class (idref: 376))
					(longName Folders))
				(EMOF.MetaNavigation (id: 401)
					(name filesGroup)
					(class (idref: 376))
					(longName Files)))
			(package (idref: 133))
			(superClass (idref: 396)))
		(EMOF.Class (id: 402)
			(name JSPAttribute)
			(ownedAttribute
				(EMOF.Property (id: 403)
					(name belongsTo)
					(class (idref: 402))
					(lower 0)
					(type (idref: 353)))
				(EMOF.Property (id: 404)
					(name declaredType)
					(class (idref: 402))
					(lower 0)
					(type (idref: 79)))
				(EMOF.Property (id: 405)
					(name declaredClass)
					(class (idref: 402))
					(lower 0)
					(type (idref: 79))))
			(package (idref: 133))
			(superClass (idref: 202)))
		(EMOF.Class (id: 406)
			(name UnknownVariable)
			(ownedAttribute
				(EMOF.Property (id: 407)
					(name usedInContext)
					(class (idref: 406))
					(lower 0)
					(type (idref: 166))))
			(package (idref: 133))
			(superClass (idref: 71)))
		(EMOF.Class (id: 408)
			(name AbstractLocalEntity)
			(ownedAttribute
				(EMOF.Property (id: 409)
					(name belongsTo)
					(class (idref: 408))
					(isComposite true)
					(lower 0)
					(type (idref: 166))))
			(package (idref: 133))
			(superClass (idref: 71)))
		(EMOF.Class (id: 410)
			(name GlobalVariable)
			(ownedAttribute
				(EMOF.Property (id: 411)
					(name belongsTo)
					(class (idref: 410))
					(lower 0)
					(type (idref: 235))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 412)
					(name containingNamespace)
					(class (idref: 410))
					(longName 'Containing namespace')))
			(package (idref: 133))
			(superClass (idref: 71)))
		(EMOF.Class (id: 413)
			(name ImplicitVariable)
			(ownedAttribute
				(EMOF.Property (id: 414)
					(name belongsTo)
					(class (idref: 413))
					(lower 0)
					(type (idref: 79))))
			(package (idref: 133))
			(superClass (idref: 71)))
		(EMOF.Class (id: 415)
			(name FormalParameter)
			(ownedAttribute
				(EMOF.Property (id: 416)
					(name position)
					(class (idref: 415))
					(lower 0)
					(type (primitive: Number))))
			(package (idref: 133))
			(superClass (idref: 408)))
		(EMOF.Class (id: 417)
			(name LocalVariable)
			(package (idref: 133))
			(superClass (idref: 408)))
		(EMOF.Class (id: 418)
			(name ExpressionArgument)
			(package (idref: 133))
			(superClass (idref: 357)))
		(EMOF.Class (id: 419)
			(name AccessArgument)
			(package (idref: 133))
			(superClass (idref: 357)))))
(EMOF.Package (id: 420)
	(name Moose)
	(ownedType
		(EMOF.Class (id: 421)
			(name Element)
			(ownedOperation
				(EMOF.MetaAction (id: 422)
					(name openEntityInspector)
					(category main)
					(class (idref: 421)))
				(EMOF.MetaAction (id: 423)
					(name inspectEntity)
					(category main)
					(class (idref: 421)))
				(EMOF.MetaAction (id: 424)
					(name openMondrianEditor)
					(category main)
					(class (idref: 421))))
			(package (idref: 420)))
		(EMOF.Class (id: 7)
			(name AbstractEntity)
			(ownedAttribute
				(EMOF.Property (id: 425)
					(name mooseModel)
					(class (idref: 7))
					(isDerived true)
					(lower 0)
					(opposite (idref: 426))
					(type (idref: 427))))
			(ownedOperation
				(EMOF.MetaAction (id: 428)
					(name openSearchingMondrianEditor)
					(category main)
					(class (idref: 7)))
				(EMOF.MetaExpression (id: 429)
					(name uniqueNameMatchesExpression)
					(class (idref: 7))))
			(package (idref: 420))
			(superClass (idref: 421)))
		(EMOF.Class (id: 427)
			(name Model)
			(ownedAttribute
				(EMOF.Property (id: 430)
					(name sourceLanguage)
					(class (idref: 427))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 431)
					(name name)
					(class (idref: 427))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 426)
					(name entity)
					(class (idref: 427))
					(lower 0)
					(opposite (idref: 425))
					(type (idref: 7))
					(upper *))
				(EMOF.MetaMeasurement (id: 434)
					(name NOCls)
					(class (idref: 427))
					(description 'The total number of model (non stub) classes')
					(isReadOnly true)
					(longName 'Number of model (non stub) classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 435)
					(name NOM)
					(class (idref: 427))
					(description 'The total number of model (non stub) methods')
					(isReadOnly true)
					(longName 'Number of model (non stub) methods')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 436)
					(name createTraceAssociations)
					(category main)
					(class (idref: 427)))
				(EMOF.MetaAction (id: 437)
					(name importSmalltalkAndScrapeTests)
					(category main)
					(class (idref: 427)))
				(EMOF.MetaAction (id: 438)
					(name importChroniaCVSLog)
					(category 'Import / Export')
					(class (idref: 427)))
				(EMOF.MetaAction (id: 439)
					(name showClassCorrelation)
					(category 'Hapax Analysis')
					(class (idref: 427)))
				(EMOF.MetaAction (id: 440)
					(name rename)
					(category Utilities)
					(class (idref: 427)))
				(EMOF.MetaAction (id: 441)
					(name importMSEFromFile)
					(category 'Import / Export')
					(class (idref: 427)))
				(EMOF.MetaAction (id: 442)
					(name importSmalltalk)
					(category 'Import / Export')
					(class (idref: 427)))
				(EMOF.MetaAction (id: 443)
					(name showDistributionMap)
					(category 'Hapax Analysis')
					(class (idref: 427)))
				(EMOF.MetaAction (id: 444)
					(name importFileSystem)
					(category 'Import / Export')
					(class (idref: 427)))
				(EMOF.MetaAction (id: 445)
					(name exportMSEToFile)
					(category 'Import / Export')
					(class (idref: 427)))
				(EMOF.MetaAction (id: 446)
					(name initializeAllMofDescriptions)
					(category Utilities)
					(class (idref: 427)))
				(EMOF.MetaAction (id: 447)
					(name importMSEFromFolder)
					(category 'Import / Export')
					(class (idref: 427)))
				(EMOF.MetaNavigation (id: 448)
					(name allJSPInvocations)
					(class (idref: 427))
					(longName 'All JSP Invocations'))
				(EMOF.MetaNavigation (id: 449)
					(name allAliases)
					(class (idref: 427))
					(longName 'All aliases'))
				(EMOF.MetaNavigation (id: 450)
					(name allChroniaFileVersions)
					(class (idref: 427))
					(longName 'All Chronia file versions'))
				(EMOF.MetaNavigation (id: 451)
					(name allClasses)
					(class (idref: 427))
					(longName 'All classes'))
				(EMOF.MetaNavigation (id: 452)
					(name allApplicationActivations)
					(class (idref: 427))
					(longName 'All application activations'))
				(EMOF.MetaNavigation (id: 453)
					(name allInheritanceDefinitions)
					(class (idref: 427))
					(longName 'All inheritances'))
				(EMOF.MetaNavigation (id: 454)
					(name allFolders)
					(class (idref: 427))
					(longName 'All folders'))
				(EMOF.MetaNavigation (id: 455)
					(name allModelClasses)
					(class (idref: 427))
					(longName 'All system classes'))
				(EMOF.MetaNavigation (id: 456)
					(name allMultiplications)
					(class (idref: 427))
					(longName 'All multiplications'))
				(EMOF.MetaNavigation (id: 457)
					(name allImplicitVariables)
					(class (idref: 427))
					(longName 'All implicit variables'))
				(EMOF.MetaNavigation (id: 458)
					(name allChroniaAuthors)
					(class (idref: 427))
					(longName 'All Chronia authors'))
				(EMOF.MetaNavigation (id: 459)
					(name allNamedAliases)
					(class (idref: 427))
					(longName 'All named aliases'))
				(EMOF.MetaNavigation (id: 460)
					(name allInvocations)
					(class (idref: 427))
					(longName 'All invocations'))
				(EMOF.MetaNavigation (id: 461)
					(name allModels)
					(class (idref: 427))
					(longName 'All models'))
				(EMOF.MetaNavigation (id: 462)
					(name allDuplications)
					(class (idref: 427))
					(longName 'All duplications'))
				(EMOF.MetaNavigation (id: 463)
					(name allNamespaces)
					(class (idref: 427))
					(longName 'All namesapces'))
				(EMOF.MetaNavigation (id: 464)
					(name allFunctions)
					(class (idref: 427))
					(longName 'All functions'))
				(EMOF.MetaNavigation (id: 465)
					(name allPackages)
					(class (idref: 427))
					(longName 'All packages'))
				(EMOF.MetaNavigation (id: 466)
					(name allAccesses)
					(class (idref: 427))
					(longName 'All accesses'))
				(EMOF.MetaNavigation (id: 467)
					(name allChroniaProjects)
					(class (idref: 427))
					(longName 'All Chronia projects'))
				(EMOF.MetaNavigation (id: 468)
					(name allTracePackageAssociations)
					(class (idref: 427))
					(longName 'All trace package associations'))
				(EMOF.MetaNavigation (id: 469)
					(name allArgumentAliases)
					(class (idref: 427))
					(longName 'All argument aliases'))
				(EMOF.MetaNavigation (id: 470)
					(name hapaxModelNavigation)
					(class (idref: 427))
					(longName 'Hapax model'))
				(EMOF.MetaNavigation (id: 471)
					(name allMethods)
					(class (idref: 427))
					(longName 'All methods'))
				(EMOF.MetaNavigation (id: 472)
					(name allTraceClassAssociations)
					(class (idref: 427))
					(longName 'All trace class associations'))
				(EMOF.MetaNavigation (id: 473)
					(name allActivations)
					(class (idref: 427))
					(longName 'All activations'))
				(EMOF.MetaNavigation (id: 474)
					(name allChroniaCommits)
					(class (idref: 427))
					(longName 'All Chronia commits'))
				(EMOF.MetaNavigation (id: 475)
					(name allInstances)
					(class (idref: 427))
					(longName 'All instances'))
				(EMOF.MetaNavigation (id: 476)
					(name allAttributes)
					(class (idref: 427))
					(longName 'All attributes'))
				(EMOF.MetaNavigation (id: 477)
					(name allComments)
					(class (idref: 427))
					(longName 'All comments'))
				(EMOF.MetaNavigation (id: 478)
					(name allGlobalVariables)
					(class (idref: 427))
					(longName 'All global variables'))
				(EMOF.MetaNavigation (id: 479)
					(name allTraceMethodAssociations)
					(class (idref: 427))
					(longName 'All trace method associations'))
				(EMOF.MetaNavigation (id: 480)
					(name formalParametersGroup)
					(class (idref: 427))
					(longName 'All parameters'))
				(EMOF.MetaNavigation (id: 481)
					(name allJSPPages)
					(class (idref: 427))
					(longName 'All JSP Pages'))
				(EMOF.MetaNavigation (id: 482)
					(name localVariablesGroup)
					(class (idref: 427))
					(longName 'All local variables'))
				(EMOF.MetaNavigation (id: 483)
					(name allTraces)
					(class (idref: 427))
					(longName 'All traces'))
				(EMOF.MetaNavigation (id: 484)
					(name allFiles)
					(class (idref: 427))
					(longName 'All files'))
				(EMOF.MetaNavigation (id: 485)
					(name allJSPAttributes)
					(class (idref: 427))
					(longName 'All JSP Attributes'))
				(EMOF.MetaNavigation (id: 486)
					(name allLiterals)
					(class (idref: 427))
					(longName 'All literals'))
				(EMOF.MetaNavigation (id: 487)
					(name allChroniaFileHistories)
					(class (idref: 427))
					(longName 'All Chronia file histories'))
				(EMOF.MetaNavigation (id: 488)
					(name allModelHistories)
					(class (idref: 427))
					(longName 'All model histories'))
				(EMOF.MetaNavigation (id: 489)
					(name allUnknownVariables)
					(class (idref: 427))
					(longName 'All unknown variables'))
				(EMOF.BlockNavigation (id: 490)
					(name 'Any Moose.Model')
					(class (idref: 427))
					(longName 'Any Moose.Model')))
			(package (idref: 420))
			(superClass (idref: 7)))
		(EMOF.Class (id: 491)
			(name AbstractGroup)
			(ownedAttribute
				(EMOF.Property (id: 492)
					(name entity)
					(class (idref: 491))
					(lower 0)
					(type (idref: 493))
					(upper *))
				(EMOF.MetaMeasurement (id: 494)
					(name numberOfItems)
					(class (idref: 491))
					(isReadOnly true)
					(longName numberOfItems)
					(type (primitive: Number))))
			(package (idref: 420))
			(superClass (idref: 7)))
		(EMOF.Class (id: 495)
			(name AbstractHistory)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 496)
					(name AGE)
					(class (idref: 495))
					(description 'Age of the history')
					(isReadOnly true)
					(longName Age)
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 497)
					(name viewSimpleEvolutionMatrix)
					(category Mondrian)
					(class (idref: 495))))
			(package (idref: 420))
			(superClass (idref: 7)))
		(EMOF.Class (id: 498)
			(name AbstractVersion)
			(package (idref: 420))
			(superClass (idref: 7)))
		(EMOF.Class (id: 499)
			(name StatelessEntity)
			(package (idref: 420))
			(superClass (idref: 7)))
		(EMOF.Class (id: 88)
			(name Group)
			(ownedOperation
				(EMOF.MetaAction (id: 500)
					(name rename)
					(category main)
					(class (idref: 88)))
				(EMOF.MetaAction (id: 501)
					(name openGroupEditor)
					(category main)
					(class (idref: 88)))
				(EMOF.MetaAction (id: 502)
					(name viewNameOccurences)
					(category Mondrian)
					(class (idref: 88))))
			(package (idref: 420))
			(superClass (idref: 491)))
		(EMOF.Class (id: 503)
			(name FolderGroup)
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 504)
			(name PackageGroup)
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 505)
			(name NamespaceGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 506)
					(name viewNamespaceHierarchy)
					(category Mondrian)
					(class (idref: 505)))
				(EMOF.MetaAction (id: 507)
					(name viewNamespaceComplexity)
					(category Mondrian)
					(class (idref: 505))))
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 508)
			(name JSPPageGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 509)
					(name viewLinksToClasses)
					(category Mondrian)
					(class (idref: 508))))
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 510)
			(name ClassGroup)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 511)
					(name 'A_NOM')
					(class (idref: 510))
					(description 'Average number of methods per class')
					(isReadOnly true)
					(longName 'Average number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 512)
					(name 'A_NOA')
					(class (idref: 510))
					(description 'Average number of attributes per class')
					(isReadOnly true)
					(longName 'Average number of attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 513)
					(name 'S_WLOC')
					(class (idref: 510))
					(description 'Total number of lines of code')
					(isReadOnly true)
					(longName 'Total number of lines of code')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 514)
					(name 'A_WLOC')
					(class (idref: 510))
					(description 'Average number of lines of code per class')
					(isReadOnly true)
					(longName 'Average number of lines of code')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 515)
					(name 'A_WNOS')
					(class (idref: 510))
					(description 'Average number of statements per class')
					(isReadOnly true)
					(longName 'Average number of statements')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 516)
					(name viewMethodInvocation)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 517)
					(name viewUmlWithMacro)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 518)
					(name viewMetricView)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 519)
					(name viewMethodsDistributionMap)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 520)
					(name viewSystemComplexity)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 521)
					(name viewUmlWithShape)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 522)
					(name viewSystemComplexityWithCalledClasses)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 523)
					(name viewScreenFillingSystemComplexity)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 524)
					(name viewSpacedSystemComplexity)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 525)
					(name viewSystemComplexityWithSuperBlueprints)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 526)
					(name viewTreeMap)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 527)
					(name viewBarChart)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 528)
					(name computeDuplication)
					(category SmallDude)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 529)
					(name viewDuplicationComplexity)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 530)
					(name viewSystemComplexityAsGraph)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 531)
					(name viewSimpleUml)
					(category Mondrian)
					(class (idref: 510)))
				(EMOF.MetaAction (id: 532)
					(name viewBlueprintComplexity)
					(category Mondrian)
					(class (idref: 510))))
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 533)
			(name FileGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 534)
					(name computeDuplicationOnCVSAnnotated)
					(category SmallDude)
					(class (idref: 533)))
				(EMOF.MetaAction (id: 535)
					(name computeDuplication)
					(category SmallDude)
					(class (idref: 533)))
				(EMOF.MetaAction (id: 536)
					(name 'computeDuplicationOnCVSAnnotated_HighPrec')
					(category SmallDude)
					(class (idref: 533)))
				(EMOF.MetaNavigation (id: 537)
					(name allMultiplications)
					(class (idref: 533))
					(longName 'All multiplications')))
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 538)
			(name MethodGroup)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 539)
					(name 'A_NOP')
					(class (idref: 538))
					(description 'Average number of parameters per methods')
					(isReadOnly true)
					(longName 'Average number of parameters')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 540)
					(name 'A_LOC')
					(class (idref: 538))
					(description 'Average number of lines of code per methods')
					(isReadOnly true)
					(longName 'Average number of lines of code')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 541)
					(name 'A_NI')
					(class (idref: 538))
					(description 'Average number of invocations per methods')
					(isReadOnly true)
					(longName 'Average number of invocations')
					(type (primitive: Number))))
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 542)
			(name CoChangePattern)
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 543)
			(name HistoryGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 544)
					(name viewSimpleEvolutionMatrix)
					(category Mondrian)
					(class (idref: 543))))
			(package (idref: 420))
			(superClass (idref: 88)))
		(EMOF.Class (id: 545)
			(name NamespaceHistoryGroup)
			(package (idref: 420))
			(superClass (idref: 543)))
		(EMOF.Class (id: 546)
			(name ClassHistoryGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 547)
					(name viewHierarchyEvolution)
					(category Mondrian)
					(class (idref: 546)))
				(EMOF.MetaAction (id: 548)
					(name viewEvolutionMatrix)
					(category Mondrian)
					(class (idref: 546))))
			(package (idref: 420))
			(superClass (idref: 543)))
		(EMOF.Class (id: 549)
			(name MethodHistoryGroup)
			(package (idref: 420))
			(superClass (idref: 543)))
		(EMOF.Class (id: 550)
			(name InvocationHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 551)
			(name AccessHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 552)
			(name ClassHierarchyHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 553)
			(name CoChangeHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 554)
			(name AttributeHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 555)
			(name FileHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 556)
			(name ClassHistory)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 557)
					(name 'AE_NOM')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'All latest evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 558)
					(name 'E_WNOSper5')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Evolution of number of statements')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 559)
					(name 'R_WLOC')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Removed number of LOC')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 560)
					(name 'E_NOA')
					(class (idref: 556))
					(description 'The sum of the number of attribute added or removed in subsequent versions')
					(isReadOnly true)
					(longName 'Evolution of number of attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 561)
					(name 'A_WLOC')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Added number of LOC')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 562)
					(name 'AEE_NOM')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'All earliest evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 563)
					(name 'S_NOM')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Stability of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 564)
					(name 'E_WNOS')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Evolution of number of statements')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 565)
					(name 'LE_NOM')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Latest evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 566)
					(name 'EE_NOM')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Earliest evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 567)
					(name 'A_WNOS')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Added number of statements')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 568)
					(name 'S_NOA')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Stability of number of attributes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 569)
					(name 'E_NOM')
					(class (idref: 556))
					(description 'The sum of the number of methods added or removed in subsequent versions')
					(isReadOnly true)
					(longName 'Evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 570)
					(name 'ALE_NOM')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'All latest evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 571)
					(name 'Last_NOM')
					(class (idref: 556))
					(description 'The last number of methods')
					(isReadOnly true)
					(longName 'Evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 572)
					(name 'R_WNOS')
					(class (idref: 556))
					(description )
					(isReadOnly true)
					(longName 'Removed number of statements')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 573)
					(name 'E_WLOC')
					(class (idref: 556))
					(description 'The sum of the number of lines of code added or removed in subsequent versions')
					(isReadOnly true)
					(longName 'Evolution of number of lines of code')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaExpression (id: 574)
					(name removedHistoryExpression)
					(class (idref: 556)))
				(EMOF.MetaExpression (id: 575)
					(name lateBornHistoryExpression)
					(class (idref: 556))))
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 576)
			(name MethodHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 577)
			(name ModelHistory)
			(ownedOperation
				(EMOF.MetaNavigation (id: 578)
					(name allClassHistories)
					(class (idref: 577))
					(longName 'All class histories'))
				(EMOF.MetaNavigation (id: 579)
					(name allNamespaceHistories)
					(class (idref: 577))
					(longName 'All namespace histories'))
				(EMOF.MetaNavigation (id: 580)
					(name allPackageHistories)
					(class (idref: 577))
					(longName 'All package histories'))
				(EMOF.MetaNavigation (id: 581)
					(name allAttributeHistories)
					(class (idref: 577))
					(longName 'All attribute histories'))
				(EMOF.MetaNavigation (id: 582)
					(name allMethodHistories)
					(class (idref: 577))
					(longName 'All method histories'))
				(EMOF.MetaNavigation (id: 583)
					(name allInheritanceDefinitionHistories)
					(class (idref: 577))
					(longName 'All inheritance definition histories')))
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 584)
			(name InheritanceDefinitionHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 585)
			(name NamespaceHistory)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 586)
					(name 'E_NOCls')
					(class (idref: 585))
					(description 'The sum of the number of classes added or removed in subsequent versions')
					(isReadOnly true)
					(longName 'Evolution of number of classes')
					(type (primitive: Number))))
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 587)
			(name PackageHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 588)
			(name FolderHistory)
			(package (idref: 420))
			(superClass (idref: 495)))
		(EMOF.Class (id: 589)
			(name CoChangeVersion)
			(package (idref: 420))
			(superClass (idref: 498)))
		(EMOF.Class (id: 590)
			(name EntityVersion)
			(package (idref: 420))
			(superClass (idref: 498)))
		(EMOF.Class (id: 591)
			(name MethodVersion)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 592)
					(name 'VE_CYCLO')
					(class (idref: 591))
					(description 'Version addition of number of methods')
					(isReadOnly true)
					(longName 'Version addition of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 593)
					(name 'VE_NOS')
					(class (idref: 591))
					(description 'Version addition of number of methods')
					(isReadOnly true)
					(longName 'Version addition of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 594)
					(name 'VA_CYCLO')
					(class (idref: 591))
					(description 'Version addition of number of methods')
					(isReadOnly true)
					(longName 'Version addition of number of methods')
					(type (primitive: Number))))
			(package (idref: 420))
			(superClass (idref: 590)))
		(EMOF.Class (id: 595)
			(name NamespaceVersion)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 596)
					(name 'VE_NOCls')
					(class (idref: 595))
					(description 'Version evolution of number of classes')
					(isReadOnly true)
					(longName 'Version evolution of number of classes')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 597)
					(name 'VA_NOM')
					(class (idref: 595))
					(description 'Version addition of number of methods')
					(isReadOnly true)
					(longName 'Version addition of number of methods')
					(type (primitive: Number))))
			(package (idref: 420))
			(superClass (idref: 590)))
		(EMOF.Class (id: 598)
			(name ClassVersion)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 599)
					(name 'VE_CYCLO')
					(class (idref: 598))
					(description 'Version evolution of number of methods')
					(isReadOnly true)
					(longName 'Version evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 600)
					(name 'VE_NOS')
					(class (idref: 598))
					(description 'Version evolution of number of methods')
					(isReadOnly true)
					(longName 'Version evolution of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 601)
					(name 'VA_NOM')
					(class (idref: 598))
					(description 'Version addition of number of methods')
					(isReadOnly true)
					(longName 'Version addition of number of methods')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 602)
					(name 'VE_NOM')
					(class (idref: 598))
					(description 'Version evolution of number of methods')
					(isReadOnly true)
					(longName 'Version evolution of number of methods')
					(type (primitive: Number))))
			(package (idref: 420))
			(superClass (idref: 590)))))
(EMOF.Package (id: 603)
	(name Chronia)
	(ownedType
		(EMOF.PrimitiveType (id: 604)
			(name Timestamp)
			(decodeExpression (value: '[:t1 | Timestamp readFrom: t1]'))
			(encodeExpression (value: '
[:t1 :t2 | 
[t1 isKindOf: Timestamp] assert.
t1 printOn: t2]'))
			(package (idref: 603)))
		(EMOF.Class (id: 605)
			(name AbstractChroniaEntity)
			(package (idref: 603))
			(superClass (idref: 7)))
		(EMOF.Class (id: 606)
			(name AbstractChroniaGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 607)
					(name openOwnershipMap)
					(category OwnershipMap)
					(class (idref: 606)))
				(EMOF.MetaAction (id: 608)
					(name openOwnershipMapClustered)
					(category OwnershipMap)
					(class (idref: 606))))
			(package (idref: 603))
			(superClass (idref: 88)))
		(EMOF.Class (id: 609)
			(name FileVersionGroup)
			(package (idref: 603))
			(superClass (idref: 606)))
		(EMOF.Class (id: 610)
			(name FileHistoryGroup)
			(ownedAttribute
				(EMOF.MetaMeasurement (id: 611)
					(name encapsulation)
					(class (idref: 610))
					(description 'The encapsulation over all folders of the project')
					(isReadOnly true)
					(longName 'Encapsulation over all folders')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 612)
					(name distribution)
					(class (idref: 610))
					(description 'The distribution over all folders of the project')
					(isReadOnly true)
					(longName 'Distribution over all folders')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaNavigation (id: 613)
					(name groupByAllFolders)
					(class (idref: 610))
					(longName 'File histories grouped by folders'))
				(EMOF.MetaNavigation (id: 614)
					(name groupByFileType)
					(class (idref: 610))
					(longName 'File histories grouped by file type'))
				(EMOF.MetaNavigation (id: 615)
					(name groupByParentFolder)
					(class (idref: 610))
					(longName 'File histories grouped by parent folders')))
			(package (idref: 603))
			(superClass (idref: 606)))
		(EMOF.Class (id: 616)
			(name FileHistoryGroupGroup)
			(ownedOperation
				(EMOF.MetaAction (id: 617)
					(name sortGroupsByPath)
					(category Groups)
					(class (idref: 616)))
				(EMOF.MetaAction (id: 618)
					(name sortGroupsBySize)
					(category Groups)
					(class (idref: 616))))
			(package (idref: 603))
			(superClass (idref: 606)))
		(EMOF.Class (id: 619)
			(name CommitGroup)
			(package (idref: 603))
			(superClass (idref: 606)))
		(EMOF.Class (id: 620)
			(name Commit)
			(ownedAttribute
				(EMOF.Property (id: 621)
					(name startTime)
					(class (idref: 620))
					(lower 0)
					(type (primitive: Chronia.Timestamp)))
				(EMOF.Property (id: 622)
					(name project)
					(class (idref: 620))
					(lower 0)
					(opposite (idref: 623))
					(type (idref: 624)))
				(EMOF.Property (id: 625)
					(name endTime)
					(class (idref: 620))
					(lower 0)
					(type (primitive: Chronia.Timestamp)))
				(EMOF.Property (id: 626)
					(name author)
					(class (idref: 620))
					(isDerived true)
					(lower 0)
					(opposite (idref: 627))
					(type (idref: 628)))
				(EMOF.MetaMeasurement (id: 629)
					(name Tstart)
					(class (idref: 620))
					(description 'The start time of this commit')
					(isReadOnly true)
					(longName 'start time of commit')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 630)
					(name BC)
					(class (idref: 620))
					(description 'Number of files that were added during this commit')
					(isReadOnly true)
					(longName 'birth count')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 631)
					(name RC)
					(class (idref: 620))
					(description 'Number of files that were readded (but previously deleted) during this commit')
					(isReadOnly true)
					(longName 'resurrection count')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 632)
					(name DC)
					(class (idref: 620))
					(description 'Number of files that were deleted during this commit')
					(isReadOnly true)
					(longName 'death count')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 633)
					(name Tend)
					(class (idref: 620))
					(description 'The end time of this commit')
					(isReadOnly true)
					(longName 'end time of commit')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 634)
					(name NoFV)
					(class (idref: 620))
					(description 'Total number of file versions of this commit')
					(isReadOnly true)
					(longName 'number of file versions')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 635)
					(name Tdelta)
					(class (idref: 620))
					(description 'How long this commit took in seconds')
					(isReadOnly true)
					(longName 'duration in seconds')
					(type (primitive: Number))))
			(package (idref: 603))
			(superClass (idref: 605)))
		(EMOF.Class (id: 624)
			(name Project)
			(ownedAttribute
				(EMOF.Property (id: 636)
					(name fileVersion)
					(class (idref: 624))
					(isDerived true)
					(lower 0)
					(type (idref: 637))
					(upper *))
				(EMOF.Property (id: 638)
					(name fileHistory)
					(class (idref: 624))
					(lower 0)
					(opposite (idref: 639))
					(type (idref: 640))
					(upper *))
				(EMOF.Property (id: 623)
					(name commit)
					(class (idref: 624))
					(lower 0)
					(opposite (idref: 622))
					(type (idref: 620))
					(upper *))
				(EMOF.Property (id: 641)
					(name author)
					(class (idref: 624))
					(lower 0)
					(opposite (idref: 642))
					(type (idref: 628))
					(upper *))
				(EMOF.MetaMeasurement (id: 643)
					(name ProjectName)
					(class (idref: 624))
					(description 'The name this project got when it was born')
					(isReadOnly true)
					(longName 'Name of this project')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 644)
					(name 'p2080')
					(class (idref: 624))
					(description 'proof whether the developers represent 20% of the authors')
					(isReadOnly true)
					(longName 'twenty eighty proof')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 645)
					(name NoC)
					(class (idref: 624))
					(description 'The number of commits that were made to this project')
					(isReadOnly true)
					(longName 'number of commits')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 646)
					(name NoFH)
					(class (idref: 624))
					(description 'Total number of file histories of this project')
					(isReadOnly true)
					(longName 'number of file histories')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 647)
					(name NoA)
					(class (idref: 624))
					(description 'Total number of authors that contributed to this project')
					(isReadOnly true)
					(longName 'Number of authors')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 648)
					(name NoFV)
					(class (idref: 624))
					(description 'Total number of file versions of this project')
					(isReadOnly true)
					(longName 'number of file versions')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 649)
					(name NoD)
					(class (idref: 624))
					(description 'The number of authors that introduced more than 80% of the code')
					(isReadOnly true)
					(longName 'number of developers')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 650)
					(name openEvolutionRadar)
					(category main)
					(class (idref: 624))))
			(package (idref: 603))
			(superClass (idref: 605)))
		(EMOF.Class (id: 637)
			(name FileVersion)
			(ownedAttribute
				(EMOF.Property (id: 651)
					(name basicFileVersion)
					(class (idref: 637))
					(lower 0)
					(type (idref: 652)))
				(EMOF.Property (id: 653)
					(name fileHistory)
					(class (idref: 637))
					(isDerived true)
					(lower 0)
					(opposite (idref: 654))
					(type (idref: 640)))
				(EMOF.Property (id: 655)
					(name commit)
					(class (idref: 637))
					(lower 0)
					(type (idref: 620)))
				(EMOF.MetaMeasurement (id: 656)
					(name NoRL)
					(class (idref: 637))
					(description 'Number of removed lines')
					(isReadOnly true)
					(longName 'Number of removed lines')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 657)
					(name NoAL)
					(class (idref: 637))
					(description 'Total number of added lines')
					(isReadOnly true)
					(longName 'Number of added lines')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 658)
					(name Owner)
					(class (idref: 637))
					(description 'The author that owns the most lines')
					(isReadOnly true)
					(longName 'owner of this version')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 659)
					(name REV)
					(class (idref: 637))
					(description 'revision number of this file version')
					(isReadOnly true)
					(longName 'Revision number')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 660)
					(name NC)
					(class (idref: 637))
					(description 'The new added lines compared to the previous version')
					(isReadOnly true)
					(longName 'New added content')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 661)
					(name ChD)
					(class (idref: 637))
					(description 'How "big" the change was')
					(isReadOnly true)
					(longName 'change density')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 662)
					(name NoL)
					(class (idref: 637))
					(description 'Total number of lines')
					(isReadOnly true)
					(longName 'Number of lines')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 663)
					(name AN)
					(class (idref: 637))
					(description 'Name of the author that commited this file version')
					(isReadOnly true)
					(longName 'author name')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaExpression (id: 664)
					(name pathStartsWith)
					(class (idref: 637)))
				(EMOF.MetaExpression (id: 665)
					(name pathEndsWith)
					(class (idref: 637)))
				(EMOF.MetaExpression (id: 666)
					(name commitedBetween)
					(class (idref: 637))))
			(package (idref: 603))
			(superClass (idref: 605)))
		(EMOF.Class (id: 652)
			(name CvsFileVersion)
			(ownedAttribute
				(EMOF.Property (id: 667)
					(name stickyTag)
					(class (idref: 652))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 668)
					(name history)
					(class (idref: 652))
					(lower 0)
					(opposite (idref: 669))
					(type (idref: 670)))
				(EMOF.Property (id: 671)
					(name change)
					(class (idref: 652))
					(lower 0)
					(type (idref: 672)))
				(EMOF.Property (id: 673)
					(name lineSize)
					(class (idref: 652))
					(lower 0)
					(type (primitive: Number)))
				(EMOF.Property (id: 674)
					(name revision)
					(class (idref: 652))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 675)
					(name timestamp)
					(class (idref: 652))
					(lower 0)
					(type (idref: 676)))
				(EMOF.Property (id: 677)
					(name comment)
					(class (idref: 652))
					(lower 0)
					(type (idref: 678)))
				(EMOF.Property (id: 679)
					(name state)
					(class (idref: 652))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 680)
					(name author)
					(class (idref: 652))
					(lower 0)
					(type (primitive: String))))
			(package (idref: 603))
			(superClass (idref: 681)))
		(EMOF.Class (id: 681)
			(name CvsFile)
			(package (idref: 603))
			(superClass (idref: 682)))
		(EMOF.Class (id: 682)
			(name CvsEntry)
			(ownedAttribute
				(EMOF.Property (id: 683)
					(name path)
					(class (idref: 682))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 684)
					(name parent)
					(class (idref: 682))
					(lower 0)
					(type (idref: 685))))
			(package (idref: 603))
			(superClass (idref: 686)))
		(EMOF.Class (id: 685)
			(name CvsDirectory)
			(ownedAttribute
				(EMOF.Property (id: 687)
					(name entry)
					(class (idref: 685))
					(lower 0)
					(type (idref: 682))
					(upper *)))
			(package (idref: 603))
			(superClass (idref: 682)))
		(EMOF.Class (id: 670)
			(name CvsFileHistory)
			(ownedAttribute
				(EMOF.Property (id: 669)
					(name version)
					(class (idref: 670))
					(lower 0)
					(opposite (idref: 668))
					(type (idref: 652))
					(upper *)))
			(package (idref: 603))
			(superClass (idref: 681)))
		(EMOF.Class (id: 672)
			(name CvsFileChange)
			(ownedAttribute
				(EMOF.Property (id: 688)
					(name addedLinesSize)
					(class (idref: 672))
					(lower 0)
					(type (primitive: Number)))
				(EMOF.Property (id: 689)
					(name removedLinesSize)
					(class (idref: 672))
					(lower 0)
					(type (primitive: Number))))
			(package (idref: 603))
			(superClass (idref: 686)))
		(EMOF.Class (id: 640)
			(name FileHistory)
			(ownedAttribute
				(EMOF.Property (id: 639)
					(name project)
					(class (idref: 640))
					(lower 0)
					(opposite (idref: 638))
					(type (idref: 624)))
				(EMOF.Property (id: 654)
					(name fileVersion)
					(class (idref: 640))
					(lower 0)
					(opposite (idref: 653))
					(type (idref: 637))
					(upper *))
				(EMOF.MetaMeasurement (id: 690)
					(name SoAL)
					(class (idref: 640))
					(description 'Total number of added lines summed over all versions of this file history')
					(isReadOnly true)
					(longName 'Sum of added lines')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 691)
					(name RC)
					(class (idref: 640))
					(description 'Number of times this file was readded (but previously deleted) during its life')
					(isReadOnly true)
					(longName 'resurrection count')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 692)
					(name NoFV)
					(class (idref: 640))
					(description 'Total number of file versions of this file')
					(isReadOnly true)
					(longName 'number of file versions')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 693)
					(name DC)
					(class (idref: 640))
					(description 'Number of times this file was deleted during its life')
					(isReadOnly true)
					(longName 'death count')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 694)
					(name Owner)
					(class (idref: 640))
					(description 'The owner of the latest version')
					(isReadOnly true)
					(longName 'owner of this file history')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 695)
					(name SoRL)
					(class (idref: 640))
					(description 'Total number of removed lines summed over all versions of this file history')
					(isReadOnly true)
					(longName 'Sum of removed lines')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 696)
					(name NoA)
					(class (idref: 640))
					(description 'Total number of authors that contributed to this file')
					(isReadOnly true)
					(longName 'Number of authors')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaExpression (id: 697)
					(name javaAndJspFiles)
					(class (idref: 640))))
			(package (idref: 603))
			(superClass (idref: 605)))
		(EMOF.Class (id: 628)
			(name Author)
			(ownedAttribute
				(EMOF.Property (id: 698)
					(name name)
					(class (idref: 628))
					(lower 0)
					(type (primitive: String)))
				(EMOF.Property (id: 642)
					(name project)
					(class (idref: 628))
					(lower 0)
					(opposite (idref: 641))
					(type (idref: 624)))
				(EMOF.Property (id: 627)
					(name commit)
					(class (idref: 628))
					(lower 0)
					(opposite (idref: 626))
					(type (idref: 620))
					(upper *))
				(EMOF.MetaMeasurement (id: 699)
					(name AuthorName)
					(class (idref: 628))
					(description 'The name of the author')
					(isReadOnly true)
					(longName 'author name')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 700)
					(name EOF)
					(class (idref: 628))
					(description 'The encapsulation of all files ever owned by this author over the whole project')
					(isReadOnly true)
					(longName 'encapsulation of owned files over system')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 701)
					(name DOF)
					(class (idref: 628))
					(description 'The distribution of all files ever owned by this author over the whole project')
					(isReadOnly true)
					(longName 'distribution of owned files over system')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 702)
					(name ESOF)
					(class (idref: 628))
					(description 'The encapsulation of all files this author is still owning at the project end')
					(isReadOnly true)
					(longName 'encapsulation of still owning files over system')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 703)
					(name NSOF)
					(class (idref: 628))
					(description 'The number of files this author is still owning')
					(isReadOnly true)
					(longName 'number of still owning files')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 704)
					(name NoC)
					(class (idref: 628))
					(description 'The number of commits this author has in this project')
					(isReadOnly true)
					(longName 'number of commits')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 705)
					(name DTF)
					(class (idref: 628))
					(description 'The distribution of all files ever touched by this author over the whole project')
					(isReadOnly true)
					(longName 'distribution of touched files over system')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 706)
					(name NTF)
					(class (idref: 628))
					(description 'The number of files this author has ever modified')
					(isReadOnly true)
					(longName 'number of touched files')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 707)
					(name IoS)
					(class (idref: 628))
					(description 'Total amount of content (~new lines) this author added to the system')
					(isReadOnly true)
					(longName 'impact on system')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 708)
					(name NOF)
					(class (idref: 628))
					(description 'The number of files this author has ever owned')
					(isReadOnly true)
					(longName 'number of owned files')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 709)
					(name color)
					(class (idref: 628))
					(description 'The name of the color that is used to colorize the commits of this author')
					(isReadOnly true)
					(longName 'name of the color')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 710)
					(name DSOF)
					(class (idref: 628))
					(description 'The distribution of all files this author is still owning at the project end')
					(isReadOnly true)
					(longName 'distribution of still owning files over system')
					(type (primitive: Number)))
				(EMOF.MetaMeasurement (id: 711)
					(name ETF)
					(class (idref: 628))
					(description 'The encapsulation of all files ever touched by this author over the whole project')
					(isReadOnly true)
					(longName 'encapsulation of touched files over system')
					(type (primitive: Number))))
			(ownedOperation
				(EMOF.MetaAction (id: 712)
					(name openTouchedFileHistories)
					(category 'Open FileHistories')
					(class (idref: 628)))
				(EMOF.MetaAction (id: 713)
					(name openStillOwningFileHistories)
					(category 'Open FileHistories')
					(class (idref: 628)))
				(EMOF.MetaAction (id: 714)
					(name openOwnedFileHistories)
					(category 'Open FileHistories')
					(class (idref: 628))))
			(package (idref: 603))
			(superClass (idref: 605)))
		(EMOF.Class (id: 715)
			(name FileHistoryProxy)
			(package (idref: 603))
			(superClass (idref: 605)))))
(EMOF.Package (id: 716)
	(name Smalltalk)
	(nestedPackage
		(EMOF.Package (id: 717)
			(name Hapax)
			(nestingPackage (idref: 716))
			(ownedType
				(EMOF.Class (id: 718)
					(name HapaxElement)
					(package (idref: 717))
					(superClass (idref: 7)))
				(EMOF.Class (id: 719)
					(name TestDummy)
					(package (idref: 717))
					(superClass (idref: 718)))
				(EMOF.Class (id: 720)
					(name Vocabulary)
					(ownedOperation
						(EMOF.MetaNavigation (id: 721)
							(name allDocuments)
							(class (idref: 720))
							(longName 'All documents'))
						(EMOF.MetaNavigation (id: 722)
							(name allTerms)
							(class (idref: 720))
							(longName 'All terms')))
					(package (idref: 717))
					(superClass (idref: 718)))
				(EMOF.Class (id: 723)
					(name Term)
					(package (idref: 717))
					(superClass (idref: 718)))
				(EMOF.Class (id: 724)
					(name Topic)
					(package (idref: 717))
					(superClass (idref: 718)))
				(EMOF.Class (id: 725)
					(name SemanticIndex)
					(package (idref: 717))
					(superClass (idref: 718)))
				(EMOF.Class (id: 726)
					(name HapaxModel)
					(ownedOperation
						(EMOF.MetaNavigation (id: 727)
							(name terms)
							(class (idref: 726))
							(longName 'All terms'))
						(EMOF.MetaNavigation (id: 728)
							(name vocabularies)
							(class (idref: 726))
							(longName 'All vocabularies')))
					(package (idref: 717))
					(superClass (idref: 718)))
				(EMOF.Class (id: 729)
					(name TextFile)
					(package (idref: 717))
					(superClass (idref: 718)))
				(EMOF.Class (id: 730)
					(name CategorizedVocabulary)
					(package (idref: 717))
					(superClass (idref: 720)))
				(EMOF.Class (id: 731)
					(name SimpleVocabulary)
					(package (idref: 717))
					(superClass (idref: 720)))))
		(EMOF.Package (id: 732)
			(name Core)
			(nestingPackage (idref: 716))
			(ownedType
				(EMOF.Class (id: 493)
					(name Object)
					(package (idref: 732)))
				(EMOF.Class (id: 676)
					(name Timestamp)
					(package (idref: 732))
					(superClass (idref: 733)))
				(EMOF.Class (id: 733)
					(name Magnitude)
					(package (idref: 732))
					(superClass (idref: 493)))
				(EMOF.Class (id: 678)
					(name Text)
					(package (idref: 732))
					(superClass (idref: 734)))
				(EMOF.Class (id: 734)
					(name CharacterArray)
					(package (idref: 732))
					(superClass (idref: 735)))
				(EMOF.Class (id: 735)
					(name ArrayedCollection)
					(package (idref: 732))
					(superClass (idref: 736)))
				(EMOF.Class (id: 736)
					(name SequenceableCollection)
					(package (idref: 732))
					(superClass (idref: 737)))
				(EMOF.Class (id: 737)
					(name Collection)
					(package (idref: 732))
					(superClass (idref: 493)))))
		(EMOF.Package (id: 738)
			(name Dude)
			(nestingPackage (idref: 716))
			(ownedType
				(EMOF.Class (id: 739)
					(name SourceCodeLine)
					(ownedAttribute
						(EMOF.MetaMeasurement (id: 740)
							(name AGE)
							(class (idref: 739))
							(description 'The number of days since this line was modified.')
							(isReadOnly true)
							(longName AgeOfLine)
							(type (primitive: Number))))
					(package (idref: 738))
					(superClass (idref: 7)))
				(EMOF.Class (id: 741)
					(name SourceCodeFragment)
					(package (idref: 738))
					(superClass (idref: 7)))
				(EMOF.Class (id: 742)
					(name Multiplication)
					(ownedAttribute
						(EMOF.MetaMeasurement (id: 743)
							(name LOC)
							(class (idref: 742))
							(description 'The number of distinct file fragments that have been cloned')
							(isReadOnly true)
							(longName 'Number of Clones')
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 744)
							(name NOsS)
							(class (idref: 742))
							(description 'The number of developers contributing in all clones')
							(isReadOnly true)
							(longName NumberOfShotgunSurgeons)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 745)
							(name NOF)
							(class (idref: 742))
							(description 'The number of distinct files covered in this multiplication')
							(isReadOnly true)
							(longName 'Number of Files')
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 746)
							(name NOPl)
							(class (idref: 742))
							(description 'The number of developers not contributing in the original')
							(isReadOnly true)
							(longName NumberOfPlagiators)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 747)
							(name TSPAN)
							(class (idref: 742))
							(description 'The number of days between the original and the most recent clone')
							(isReadOnly true)
							(longName TimeSpan)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 748)
							(name NOCl)
							(class (idref: 742))
							(description 'The number of distinct file fragments that have been cloned')
							(isReadOnly true)
							(longName 'Number of Clones')
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 749)
							(name NODv)
							(class (idref: 742))
							(description 'The number of developers contributing in this multiplicaiton')
							(isReadOnly true)
							(longName NumberOfDevelopers)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 750)
							(name oAGE)
							(class (idref: 742))
							(description 'The number of days since the writing of the first line in the original.')
							(isReadOnly true)
							(longName AgeOfTheOriginal)
							(type (primitive: Number))))
					(ownedOperation
						(EMOF.MetaAction (id: 751)
							(name browseDuplicationText)
							(category main)
							(class (idref: 742)))
						(EMOF.MetaAction (id: 752)
							(name 'viewClones2')
							(category main)
							(class (idref: 742)))
						(EMOF.MetaNavigation (id: 753)
							(name allDuplications)
							(class (idref: 742))
							(longName 'All Duplications of this multiplication'))
						(EMOF.MetaNavigation (id: 754)
							(name allDevelopers)
							(class (idref: 742))
							(longName 'All Developers'))
						(EMOF.MetaNavigation (id: 755)
							(name allSurgeons)
							(class (idref: 742))
							(longName 'All Surgeons'))
						(EMOF.MetaNavigation (id: 756)
							(name allFiles)
							(class (idref: 742))
							(longName 'All files covered in this multiplication'))
						(EMOF.MetaNavigation (id: 757)
							(name allPlagiators)
							(class (idref: 742))
							(longName 'All Plagiators')))
					(package (idref: 738))
					(superClass (idref: 7)))
				(EMOF.Class (id: 758)
					(name Detector)
					(ownedAttribute
						(EMOF.MetaMeasurement (id: 759)
							(name AGE)
							(class (idref: 758))
							(description 'The number of days between the oldest line of code and the newst one.')
							(isReadOnly true)
							(longName AgeOfModel)
							(type (primitive: Number))))
					(package (idref: 738))
					(superClass (idref: 7)))
				(EMOF.Class (id: 760)
					(name Duplication)
					(ownedOperation
						(EMOF.MetaAction (id: 761)
							(name browseDuplicationText)
							(category main)
							(class (idref: 760))))
					(package (idref: 738))
					(superClass (idref: 7)))
				(EMOF.Class (id: 762)
					(name Developer)
					(ownedAttribute
						(EMOF.MetaMeasurement (id: 763)
							(name NOPedD)
							(class (idref: 762))
							(description 'The number of developers this guy has plagiated')
							(isReadOnly true)
							(longName NumberOfPlagiatedDevelopers)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 764)
							(name NOPingD)
							(class (idref: 762))
							(description 'The number of developers plagiating this guy')
							(isReadOnly true)
							(longName NumberOfPlagiaringDevelopers)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 765)
							(name NOPl)
							(class (idref: 762))
							(description 'The number of clones that this developer has added')
							(isReadOnly true)
							(longName NumberOfPlagiaries)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 766)
							(name NOP)
							(class (idref: 762))
							(description 'The number of multiplications that this developer has contibuted by creating more clones')
							(isReadOnly true)
							(longName NumberOfPlagiations)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 767)
							(name NOOr)
							(class (idref: 762))
							(description 'The number of multiplications for wich this author has contributed to the original')
							(isReadOnly true)
							(longName NumberOfOriginals)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 768)
							(name NOCl)
							(class (idref: 762))
							(description 'The number of clones that this developer has contibutions to')
							(isReadOnly true)
							(longName NumberOfClones)
							(type (primitive: Number)))
						(EMOF.MetaMeasurement (id: 769)
							(name NOMp)
							(class (idref: 762))
							(description 'The number of multiplications that this developer has contibutions to')
							(isReadOnly true)
							(longName NumberOfMultiplications)
							(type (primitive: Number))))
					(ownedOperation
						(EMOF.MetaNavigation (id: 770)
							(name allMultiplications)
							(class (idref: 762))
							(longName 'All Multiplications'))
						(EMOF.MetaNavigation (id: 771)
							(name allOriginals)
							(class (idref: 762))
							(longName 'All Originals'))
						(EMOF.MetaNavigation (id: 772)
							(name allPlagiated)
							(class (idref: 762))
							(longName 'All Plagiated developers'))
						(EMOF.MetaNavigation (id: 773)
							(name allPlagiations)
							(class (idref: 762))
							(longName 'All Plagiations'))
						(EMOF.MetaNavigation (id: 774)
							(name allPlagiators)
							(class (idref: 762))
							(longName 'All Plagiating developers')))
					(package (idref: 738))
					(superClass (idref: 7)))
				(EMOF.Class (id: 775)
					(name MultiplicationGroup)
					(package (idref: 738))
					(superClass (idref: 88)))
				(EMOF.Class (id: 776)
					(name DuplicationGroup)
					(package (idref: 738))
					(superClass (idref: 88))))))
	(ownedType
		(EMOF.Class (id: 686)
			(name CvsModelRoot)
			(package (idref: 716))
			(superClass (idref: 493))))))